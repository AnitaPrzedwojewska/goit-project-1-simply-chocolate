{"mappings":"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","sources":["src/js/swiper.js"],"sourcesContent":["/**\n * Swiper 11.0.5\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * https://swiperjs.com\n *\n * Copyright 2014-2023 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: November 22, 2023\n */\n\nvar Swiper = (function () {\n  'use strict';\n\n  /**\n   * SSR Window 4.0.2\n   * Better handling for window object in SSR environment\n   * https://github.com/nolimits4web/ssr-window\n   *\n   * Copyright 2021, Vladimir Kharlampidi\n   *\n   * Licensed under MIT\n   *\n   * Released on: December 13, 2021\n   */\n  /* eslint-disable no-param-reassign */\n  function isObject$1(obj) {\n    return obj !== null && typeof obj === 'object' && 'constructor' in obj && obj.constructor === Object;\n  }\n  function extend$1(target, src) {\n    if (target === void 0) {\n      target = {};\n    }\n    if (src === void 0) {\n      src = {};\n    }\n    Object.keys(src).forEach(key => {\n      if (typeof target[key] === 'undefined') target[key] = src[key];else if (isObject$1(src[key]) && isObject$1(target[key]) && Object.keys(src[key]).length > 0) {\n        extend$1(target[key], src[key]);\n      }\n    });\n  }\n  const ssrDocument = {\n    body: {},\n    addEventListener() {},\n    removeEventListener() {},\n    activeElement: {\n      blur() {},\n      nodeName: ''\n    },\n    querySelector() {\n      return null;\n    },\n    querySelectorAll() {\n      return [];\n    },\n    getElementById() {\n      return null;\n    },\n    createEvent() {\n      return {\n        initEvent() {}\n      };\n    },\n    createElement() {\n      return {\n        children: [],\n        childNodes: [],\n        style: {},\n        setAttribute() {},\n        getElementsByTagName() {\n          return [];\n        }\n      };\n    },\n    createElementNS() {\n      return {};\n    },\n    importNode() {\n      return null;\n    },\n    location: {\n      hash: '',\n      host: '',\n      hostname: '',\n      href: '',\n      origin: '',\n      pathname: '',\n      protocol: '',\n      search: ''\n    }\n  };\n  function getDocument() {\n    const doc = typeof document !== 'undefined' ? document : {};\n    extend$1(doc, ssrDocument);\n    return doc;\n  }\n  const ssrWindow = {\n    document: ssrDocument,\n    navigator: {\n      userAgent: ''\n    },\n    location: {\n      hash: '',\n      host: '',\n      hostname: '',\n      href: '',\n      origin: '',\n      pathname: '',\n      protocol: '',\n      search: ''\n    },\n    history: {\n      replaceState() {},\n      pushState() {},\n      go() {},\n      back() {}\n    },\n    CustomEvent: function CustomEvent() {\n      return this;\n    },\n    addEventListener() {},\n    removeEventListener() {},\n    getComputedStyle() {\n      return {\n        getPropertyValue() {\n          return '';\n        }\n      };\n    },\n    Image() {},\n    Date() {},\n    screen: {},\n    setTimeout() {},\n    clearTimeout() {},\n    matchMedia() {\n      return {};\n    },\n    requestAnimationFrame(callback) {\n      if (typeof setTimeout === 'undefined') {\n        callback();\n        return null;\n      }\n      return setTimeout(callback, 0);\n    },\n    cancelAnimationFrame(id) {\n      if (typeof setTimeout === 'undefined') {\n        return;\n      }\n      clearTimeout(id);\n    }\n  };\n  function getWindow() {\n    const win = typeof window !== 'undefined' ? window : {};\n    extend$1(win, ssrWindow);\n    return win;\n  }\n\n  function classesToTokens(classes) {\n    if (classes === void 0) {\n      classes = '';\n    }\n    return classes.trim().split(' ').filter(c => !!c.trim());\n  }\n\n  function deleteProps(obj) {\n    const object = obj;\n    Object.keys(object).forEach(key => {\n      try {\n        object[key] = null;\n      } catch (e) {\n        // no getter for object\n      }\n      try {\n        delete object[key];\n      } catch (e) {\n        // something got wrong\n      }\n    });\n  }\n  function nextTick(callback, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n    return setTimeout(callback, delay);\n  }\n  function now() {\n    return Date.now();\n  }\n  function getComputedStyle$1(el) {\n    const window = getWindow();\n    let style;\n    if (window.getComputedStyle) {\n      style = window.getComputedStyle(el, null);\n    }\n    if (!style && el.currentStyle) {\n      style = el.currentStyle;\n    }\n    if (!style) {\n      style = el.style;\n    }\n    return style;\n  }\n  function getTranslate(el, axis) {\n    if (axis === void 0) {\n      axis = 'x';\n    }\n    const window = getWindow();\n    let matrix;\n    let curTransform;\n    let transformMatrix;\n    const curStyle = getComputedStyle$1(el);\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n      }\n      // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[4]);\n    }\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[5]);\n    }\n    return curTransform || 0;\n  }\n  function isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === 'Object';\n  }\n  function isNode(node) {\n    // eslint-disable-next-line\n    if (typeof window !== 'undefined' && typeof window.HTMLElement !== 'undefined') {\n      return node instanceof HTMLElement;\n    }\n    return node && (node.nodeType === 1 || node.nodeType === 11);\n  }\n  function extend() {\n    const to = Object(arguments.length <= 0 ? undefined : arguments[0]);\n    const noExtend = ['__proto__', 'constructor', 'prototype'];\n    for (let i = 1; i < arguments.length; i += 1) {\n      const nextSource = i < 0 || arguments.length <= i ? undefined : arguments[i];\n      if (nextSource !== undefined && nextSource !== null && !isNode(nextSource)) {\n        const keysArray = Object.keys(Object(nextSource)).filter(key => noExtend.indexOf(key) < 0);\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n          if (desc !== undefined && desc.enumerable) {\n            if (isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n              if (nextSource[nextKey].__swiper__) {\n                to[nextKey] = nextSource[nextKey];\n              } else {\n                extend(to[nextKey], nextSource[nextKey]);\n              }\n            } else if (!isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n              if (nextSource[nextKey].__swiper__) {\n                to[nextKey] = nextSource[nextKey];\n              } else {\n                extend(to[nextKey], nextSource[nextKey]);\n              }\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n    return to;\n  }\n  function setCSSProperty(el, varName, varValue) {\n    el.style.setProperty(varName, varValue);\n  }\n  function animateCSSModeScroll(_ref) {\n    let {\n      swiper,\n      targetPosition,\n      side\n    } = _ref;\n    const window = getWindow();\n    const startPosition = -swiper.translate;\n    let startTime = null;\n    let time;\n    const duration = swiper.params.speed;\n    swiper.wrapperEl.style.scrollSnapType = 'none';\n    window.cancelAnimationFrame(swiper.cssModeFrameID);\n    const dir = targetPosition > startPosition ? 'next' : 'prev';\n    const isOutOfBound = (current, target) => {\n      return dir === 'next' && current >= target || dir === 'prev' && current <= target;\n    };\n    const animate = () => {\n      time = new Date().getTime();\n      if (startTime === null) {\n        startTime = time;\n      }\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = 0.5 - Math.cos(progress * Math.PI) / 2;\n      let currentPosition = startPosition + easeProgress * (targetPosition - startPosition);\n      if (isOutOfBound(currentPosition, targetPosition)) {\n        currentPosition = targetPosition;\n      }\n      swiper.wrapperEl.scrollTo({\n        [side]: currentPosition\n      });\n      if (isOutOfBound(currentPosition, targetPosition)) {\n        swiper.wrapperEl.style.overflow = 'hidden';\n        swiper.wrapperEl.style.scrollSnapType = '';\n        setTimeout(() => {\n          swiper.wrapperEl.style.overflow = '';\n          swiper.wrapperEl.scrollTo({\n            [side]: currentPosition\n          });\n        });\n        window.cancelAnimationFrame(swiper.cssModeFrameID);\n        return;\n      }\n      swiper.cssModeFrameID = window.requestAnimationFrame(animate);\n    };\n    animate();\n  }\n  function elementChildren(element, selector) {\n    if (selector === void 0) {\n      selector = '';\n    }\n    return [...element.children].filter(el => el.matches(selector));\n  }\n  function showWarning(text) {\n    try {\n      console.warn(text);\n      return;\n    } catch (err) {\n      // err\n    }\n  }\n  function createElement(tag, classes) {\n    if (classes === void 0) {\n      classes = [];\n    }\n    const el = document.createElement(tag);\n    el.classList.add(...(Array.isArray(classes) ? classes : classesToTokens(classes)));\n    return el;\n  }\n  function elementPrevAll(el, selector) {\n    const prevEls = [];\n    while (el.previousElementSibling) {\n      const prev = el.previousElementSibling; // eslint-disable-line\n      if (selector) {\n        if (prev.matches(selector)) prevEls.push(prev);\n      } else prevEls.push(prev);\n      el = prev;\n    }\n    return prevEls;\n  }\n  function elementNextAll(el, selector) {\n    const nextEls = [];\n    while (el.nextElementSibling) {\n      const next = el.nextElementSibling; // eslint-disable-line\n      if (selector) {\n        if (next.matches(selector)) nextEls.push(next);\n      } else nextEls.push(next);\n      el = next;\n    }\n    return nextEls;\n  }\n  function elementStyle(el, prop) {\n    const window = getWindow();\n    return window.getComputedStyle(el, null).getPropertyValue(prop);\n  }\n  function elementIndex(el) {\n    let child = el;\n    let i;\n    if (child) {\n      i = 0;\n      // eslint-disable-next-line\n      while ((child = child.previousSibling) !== null) {\n        if (child.nodeType === 1) i += 1;\n      }\n      return i;\n    }\n    return undefined;\n  }\n  function elementParents(el, selector) {\n    const parents = []; // eslint-disable-line\n    let parent = el.parentElement; // eslint-disable-line\n    while (parent) {\n      if (selector) {\n        if (parent.matches(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n      parent = parent.parentElement;\n    }\n    return parents;\n  }\n  function elementOuterSize(el, size, includeMargins) {\n    const window = getWindow();\n    if (includeMargins) {\n      return el[size === 'width' ? 'offsetWidth' : 'offsetHeight'] + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-right' : 'margin-top')) + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-left' : 'margin-bottom'));\n    }\n    return el.offsetWidth;\n  }\n\n  let support;\n  function calcSupport() {\n    const window = getWindow();\n    const document = getDocument();\n    return {\n      smoothScroll: document.documentElement && document.documentElement.style && 'scrollBehavior' in document.documentElement.style,\n      touch: !!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch)\n    };\n  }\n  function getSupport() {\n    if (!support) {\n      support = calcSupport();\n    }\n    return support;\n  }\n\n  let deviceCached;\n  function calcDevice(_temp) {\n    let {\n      userAgent\n    } = _temp === void 0 ? {} : _temp;\n    const support = getSupport();\n    const window = getWindow();\n    const platform = window.navigator.platform;\n    const ua = userAgent || window.navigator.userAgent;\n    const device = {\n      ios: false,\n      android: false\n    };\n    const screenWidth = window.screen.width;\n    const screenHeight = window.screen.height;\n    const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n    let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n    const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n    const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n    const windows = platform === 'Win32';\n    let macos = platform === 'MacIntel';\n\n    // iPadOs 13 fix\n    const iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\n    if (!ipad && macos && support.touch && iPadScreens.indexOf(`${screenWidth}x${screenHeight}`) >= 0) {\n      ipad = ua.match(/(Version)\\/([\\d.]+)/);\n      if (!ipad) ipad = [0, 1, '13_0_0'];\n      macos = false;\n    }\n\n    // Android\n    if (android && !windows) {\n      device.os = 'android';\n      device.android = true;\n    }\n    if (ipad || iphone || ipod) {\n      device.os = 'ios';\n      device.ios = true;\n    }\n\n    // Export object\n    return device;\n  }\n  function getDevice(overrides) {\n    if (overrides === void 0) {\n      overrides = {};\n    }\n    if (!deviceCached) {\n      deviceCached = calcDevice(overrides);\n    }\n    return deviceCached;\n  }\n\n  let browser;\n  function calcBrowser() {\n    const window = getWindow();\n    let needPerspectiveFix = false;\n    function isSafari() {\n      const ua = window.navigator.userAgent.toLowerCase();\n      return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;\n    }\n    if (isSafari()) {\n      const ua = String(window.navigator.userAgent);\n      if (ua.includes('Version/')) {\n        const [major, minor] = ua.split('Version/')[1].split(' ')[0].split('.').map(num => Number(num));\n        needPerspectiveFix = major < 16 || major === 16 && minor < 2;\n      }\n    }\n    return {\n      isSafari: needPerspectiveFix || isSafari(),\n      needPerspectiveFix,\n      isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent)\n    };\n  }\n  function getBrowser() {\n    if (!browser) {\n      browser = calcBrowser();\n    }\n    return browser;\n  }\n\n  function Resize(_ref) {\n    let {\n      swiper,\n      on,\n      emit\n    } = _ref;\n    const window = getWindow();\n    let observer = null;\n    let animationFrame = null;\n    const resizeHandler = () => {\n      if (!swiper || swiper.destroyed || !swiper.initialized) return;\n      emit('beforeResize');\n      emit('resize');\n    };\n    const createObserver = () => {\n      if (!swiper || swiper.destroyed || !swiper.initialized) return;\n      observer = new ResizeObserver(entries => {\n        animationFrame = window.requestAnimationFrame(() => {\n          const {\n            width,\n            height\n          } = swiper;\n          let newWidth = width;\n          let newHeight = height;\n          entries.forEach(_ref2 => {\n            let {\n              contentBoxSize,\n              contentRect,\n              target\n            } = _ref2;\n            if (target && target !== swiper.el) return;\n            newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\n            newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\n          });\n          if (newWidth !== width || newHeight !== height) {\n            resizeHandler();\n          }\n        });\n      });\n      observer.observe(swiper.el);\n    };\n    const removeObserver = () => {\n      if (animationFrame) {\n        window.cancelAnimationFrame(animationFrame);\n      }\n      if (observer && observer.unobserve && swiper.el) {\n        observer.unobserve(swiper.el);\n        observer = null;\n      }\n    };\n    const orientationChangeHandler = () => {\n      if (!swiper || swiper.destroyed || !swiper.initialized) return;\n      emit('orientationchange');\n    };\n    on('init', () => {\n      if (swiper.params.resizeObserver && typeof window.ResizeObserver !== 'undefined') {\n        createObserver();\n        return;\n      }\n      window.addEventListener('resize', resizeHandler);\n      window.addEventListener('orientationchange', orientationChangeHandler);\n    });\n    on('destroy', () => {\n      removeObserver();\n      window.removeEventListener('resize', resizeHandler);\n      window.removeEventListener('orientationchange', orientationChangeHandler);\n    });\n  }\n\n  function Observer(_ref) {\n    let {\n      swiper,\n      extendParams,\n      on,\n      emit\n    } = _ref;\n    const observers = [];\n    const window = getWindow();\n    const attach = function (target, options) {\n      if (options === void 0) {\n        options = {};\n      }\n      const ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n      const observer = new ObserverFunc(mutations => {\n        // The observerUpdate event should only be triggered\n        // once despite the number of mutations.  Additional\n        // triggers are redundant and are very costly\n        if (swiper.__preventObserver__) return;\n        if (mutations.length === 1) {\n          emit('observerUpdate', mutations[0]);\n          return;\n        }\n        const observerUpdate = function observerUpdate() {\n          emit('observerUpdate', mutations[0]);\n        };\n        if (window.requestAnimationFrame) {\n          window.requestAnimationFrame(observerUpdate);\n        } else {\n          window.setTimeout(observerUpdate, 0);\n        }\n      });\n      observer.observe(target, {\n        attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n        childList: typeof options.childList === 'undefined' ? true : options.childList,\n        characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n      });\n      observers.push(observer);\n    };\n    const init = () => {\n      if (!swiper.params.observer) return;\n      if (swiper.params.observeParents) {\n        const containerParents = elementParents(swiper.hostEl);\n        for (let i = 0; i < containerParents.length; i += 1) {\n          attach(containerParents[i]);\n        }\n      }\n      // Observe container\n      attach(swiper.hostEl, {\n        childList: swiper.params.observeSlideChildren\n      });\n\n      // Observe wrapper\n      attach(swiper.wrapperEl, {\n        attributes: false\n      });\n    };\n    const destroy = () => {\n      observers.forEach(observer => {\n        observer.disconnect();\n      });\n      observers.splice(0, observers.length);\n    };\n    extendParams({\n      observer: false,\n      observeParents: false,\n      observeSlideChildren: false\n    });\n    on('init', init);\n    on('destroy', destroy);\n  }\n\n  /* eslint-disable no-underscore-dangle */\n\n  var eventsEmitter = {\n    on(events, handler, priority) {\n      const self = this;\n      if (!self.eventsListeners || self.destroyed) return self;\n      if (typeof handler !== 'function') return self;\n      const method = priority ? 'unshift' : 'push';\n      events.split(' ').forEach(event => {\n        if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n        self.eventsListeners[event][method](handler);\n      });\n      return self;\n    },\n    once(events, handler, priority) {\n      const self = this;\n      if (!self.eventsListeners || self.destroyed) return self;\n      if (typeof handler !== 'function') return self;\n      function onceHandler() {\n        self.off(events, onceHandler);\n        if (onceHandler.__emitterProxy) {\n          delete onceHandler.__emitterProxy;\n        }\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        handler.apply(self, args);\n      }\n      onceHandler.__emitterProxy = handler;\n      return self.on(events, onceHandler, priority);\n    },\n    onAny(handler, priority) {\n      const self = this;\n      if (!self.eventsListeners || self.destroyed) return self;\n      if (typeof handler !== 'function') return self;\n      const method = priority ? 'unshift' : 'push';\n      if (self.eventsAnyListeners.indexOf(handler) < 0) {\n        self.eventsAnyListeners[method](handler);\n      }\n      return self;\n    },\n    offAny(handler) {\n      const self = this;\n      if (!self.eventsListeners || self.destroyed) return self;\n      if (!self.eventsAnyListeners) return self;\n      const index = self.eventsAnyListeners.indexOf(handler);\n      if (index >= 0) {\n        self.eventsAnyListeners.splice(index, 1);\n      }\n      return self;\n    },\n    off(events, handler) {\n      const self = this;\n      if (!self.eventsListeners || self.destroyed) return self;\n      if (!self.eventsListeners) return self;\n      events.split(' ').forEach(event => {\n        if (typeof handler === 'undefined') {\n          self.eventsListeners[event] = [];\n        } else if (self.eventsListeners[event]) {\n          self.eventsListeners[event].forEach((eventHandler, index) => {\n            if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) {\n              self.eventsListeners[event].splice(index, 1);\n            }\n          });\n        }\n      });\n      return self;\n    },\n    emit() {\n      const self = this;\n      if (!self.eventsListeners || self.destroyed) return self;\n      if (!self.eventsListeners) return self;\n      let events;\n      let data;\n      let context;\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n        events = args[0];\n        data = args.slice(1, args.length);\n        context = self;\n      } else {\n        events = args[0].events;\n        data = args[0].data;\n        context = args[0].context || self;\n      }\n      data.unshift(context);\n      const eventsArray = Array.isArray(events) ? events : events.split(' ');\n      eventsArray.forEach(event => {\n        if (self.eventsAnyListeners && self.eventsAnyListeners.length) {\n          self.eventsAnyListeners.forEach(eventHandler => {\n            eventHandler.apply(context, [event, ...data]);\n          });\n        }\n        if (self.eventsListeners && self.eventsListeners[event]) {\n          self.eventsListeners[event].forEach(eventHandler => {\n            eventHandler.apply(context, data);\n          });\n        }\n      });\n      return self;\n    }\n  };\n\n  function updateSize() {\n    const swiper = this;\n    let width;\n    let height;\n    const el = swiper.el;\n    if (typeof swiper.params.width !== 'undefined' && swiper.params.width !== null) {\n      width = swiper.params.width;\n    } else {\n      width = el.clientWidth;\n    }\n    if (typeof swiper.params.height !== 'undefined' && swiper.params.height !== null) {\n      height = swiper.params.height;\n    } else {\n      height = el.clientHeight;\n    }\n    if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {\n      return;\n    }\n\n    // Subtract paddings\n    width = width - parseInt(elementStyle(el, 'padding-left') || 0, 10) - parseInt(elementStyle(el, 'padding-right') || 0, 10);\n    height = height - parseInt(elementStyle(el, 'padding-top') || 0, 10) - parseInt(elementStyle(el, 'padding-bottom') || 0, 10);\n    if (Number.isNaN(width)) width = 0;\n    if (Number.isNaN(height)) height = 0;\n    Object.assign(swiper, {\n      width,\n      height,\n      size: swiper.isHorizontal() ? width : height\n    });\n  }\n\n  function updateSlides() {\n    const swiper = this;\n    function getDirectionPropertyValue(node, label) {\n      return parseFloat(node.getPropertyValue(swiper.getDirectionLabel(label)) || 0);\n    }\n    const params = swiper.params;\n    const {\n      wrapperEl,\n      slidesEl,\n      size: swiperSize,\n      rtlTranslate: rtl,\n      wrongRTL\n    } = swiper;\n    const isVirtual = swiper.virtual && params.virtual.enabled;\n    const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n    const slides = elementChildren(slidesEl, `.${swiper.params.slideClass}, swiper-slide`);\n    const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n    let snapGrid = [];\n    const slidesGrid = [];\n    const slidesSizesGrid = [];\n    let offsetBefore = params.slidesOffsetBefore;\n    if (typeof offsetBefore === 'function') {\n      offsetBefore = params.slidesOffsetBefore.call(swiper);\n    }\n    let offsetAfter = params.slidesOffsetAfter;\n    if (typeof offsetAfter === 'function') {\n      offsetAfter = params.slidesOffsetAfter.call(swiper);\n    }\n    const previousSnapGridLength = swiper.snapGrid.length;\n    const previousSlidesGridLength = swiper.slidesGrid.length;\n    let spaceBetween = params.spaceBetween;\n    let slidePosition = -offsetBefore;\n    let prevSlideSize = 0;\n    let index = 0;\n    if (typeof swiperSize === 'undefined') {\n      return;\n    }\n    if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n      spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n    } else if (typeof spaceBetween === 'string') {\n      spaceBetween = parseFloat(spaceBetween);\n    }\n    swiper.virtualSize = -spaceBetween;\n\n    // reset margins\n    slides.forEach(slideEl => {\n      if (rtl) {\n        slideEl.style.marginLeft = '';\n      } else {\n        slideEl.style.marginRight = '';\n      }\n      slideEl.style.marginBottom = '';\n      slideEl.style.marginTop = '';\n    });\n\n    // reset cssMode offsets\n    if (params.centeredSlides && params.cssMode) {\n      setCSSProperty(wrapperEl, '--swiper-centered-offset-before', '');\n      setCSSProperty(wrapperEl, '--swiper-centered-offset-after', '');\n    }\n    const gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;\n    if (gridEnabled) {\n      swiper.grid.initSlides(slides);\n    } else if (swiper.grid) {\n      swiper.grid.unsetSlides();\n    }\n\n    // Calc slides\n    let slideSize;\n    const shouldResetSlideSize = params.slidesPerView === 'auto' && params.breakpoints && Object.keys(params.breakpoints).filter(key => {\n      return typeof params.breakpoints[key].slidesPerView !== 'undefined';\n    }).length > 0;\n    for (let i = 0; i < slidesLength; i += 1) {\n      slideSize = 0;\n      let slide;\n      if (slides[i]) slide = slides[i];\n      if (gridEnabled) {\n        swiper.grid.updateSlide(i, slide, slides);\n      }\n      if (slides[i] && elementStyle(slide, 'display') === 'none') continue; // eslint-disable-line\n\n      if (params.slidesPerView === 'auto') {\n        if (shouldResetSlideSize) {\n          slides[i].style[swiper.getDirectionLabel('width')] = ``;\n        }\n        const slideStyles = getComputedStyle(slide);\n        const currentTransform = slide.style.transform;\n        const currentWebKitTransform = slide.style.webkitTransform;\n        if (currentTransform) {\n          slide.style.transform = 'none';\n        }\n        if (currentWebKitTransform) {\n          slide.style.webkitTransform = 'none';\n        }\n        if (params.roundLengths) {\n          slideSize = swiper.isHorizontal() ? elementOuterSize(slide, 'width', true) : elementOuterSize(slide, 'height', true);\n        } else {\n          // eslint-disable-next-line\n          const width = getDirectionPropertyValue(slideStyles, 'width');\n          const paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n          const paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n          const marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n          const marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = width + marginLeft + marginRight;\n          } else {\n            const {\n              clientWidth,\n              offsetWidth\n            } = slide;\n            slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n          }\n        }\n        if (currentTransform) {\n          slide.style.transform = currentTransform;\n        }\n        if (currentWebKitTransform) {\n          slide.style.webkitTransform = currentWebKitTransform;\n        }\n        if (params.roundLengths) slideSize = Math.floor(slideSize);\n      } else {\n        slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n        if (params.roundLengths) slideSize = Math.floor(slideSize);\n        if (slides[i]) {\n          slides[i].style[swiper.getDirectionLabel('width')] = `${slideSize}px`;\n        }\n      }\n      if (slides[i]) {\n        slides[i].swiperSlideSize = slideSize;\n      }\n      slidesSizesGrid.push(slideSize);\n      if (params.centeredSlides) {\n        slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n        if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n        if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n        if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n        if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n        if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n        slidesGrid.push(slidePosition);\n      } else {\n        if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n        if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n        slidesGrid.push(slidePosition);\n        slidePosition = slidePosition + slideSize + spaceBetween;\n      }\n      swiper.virtualSize += slideSize + spaceBetween;\n      prevSlideSize = slideSize;\n      index += 1;\n    }\n    swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n    if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n      wrapperEl.style.width = `${swiper.virtualSize + spaceBetween}px`;\n    }\n    if (params.setWrapperSize) {\n      wrapperEl.style[swiper.getDirectionLabel('width')] = `${swiper.virtualSize + spaceBetween}px`;\n    }\n    if (gridEnabled) {\n      swiper.grid.updateWrapperSize(slideSize, snapGrid);\n    }\n\n    // Remove last grid elements depending on width\n    if (!params.centeredSlides) {\n      const newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n          newSlidesGrid.push(slidesGridItem);\n        }\n      }\n      snapGrid = newSlidesGrid;\n      if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n        snapGrid.push(swiper.virtualSize - swiperSize);\n      }\n    }\n    if (isVirtual && params.loop) {\n      const size = slidesSizesGrid[0] + spaceBetween;\n      if (params.slidesPerGroup > 1) {\n        const groups = Math.ceil((swiper.virtual.slidesBefore + swiper.virtual.slidesAfter) / params.slidesPerGroup);\n        const groupSize = size * params.slidesPerGroup;\n        for (let i = 0; i < groups; i += 1) {\n          snapGrid.push(snapGrid[snapGrid.length - 1] + groupSize);\n        }\n      }\n      for (let i = 0; i < swiper.virtual.slidesBefore + swiper.virtual.slidesAfter; i += 1) {\n        if (params.slidesPerGroup === 1) {\n          snapGrid.push(snapGrid[snapGrid.length - 1] + size);\n        }\n        slidesGrid.push(slidesGrid[slidesGrid.length - 1] + size);\n        swiper.virtualSize += size;\n      }\n    }\n    if (snapGrid.length === 0) snapGrid = [0];\n    if (spaceBetween !== 0) {\n      const key = swiper.isHorizontal() && rtl ? 'marginLeft' : swiper.getDirectionLabel('marginRight');\n      slides.filter((_, slideIndex) => {\n        if (!params.cssMode || params.loop) return true;\n        if (slideIndex === slides.length - 1) {\n          return false;\n        }\n        return true;\n      }).forEach(slideEl => {\n        slideEl.style[key] = `${spaceBetween}px`;\n      });\n    }\n    if (params.centeredSlides && params.centeredSlidesBounds) {\n      let allSlidesSize = 0;\n      slidesSizesGrid.forEach(slideSizeValue => {\n        allSlidesSize += slideSizeValue + (spaceBetween || 0);\n      });\n      allSlidesSize -= spaceBetween;\n      const maxSnap = allSlidesSize - swiperSize;\n      snapGrid = snapGrid.map(snap => {\n        if (snap <= 0) return -offsetBefore;\n        if (snap > maxSnap) return maxSnap + offsetAfter;\n        return snap;\n      });\n    }\n    if (params.centerInsufficientSlides) {\n      let allSlidesSize = 0;\n      slidesSizesGrid.forEach(slideSizeValue => {\n        allSlidesSize += slideSizeValue + (spaceBetween || 0);\n      });\n      allSlidesSize -= spaceBetween;\n      if (allSlidesSize < swiperSize) {\n        const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n        snapGrid.forEach((snap, snapIndex) => {\n          snapGrid[snapIndex] = snap - allSlidesOffset;\n        });\n        slidesGrid.forEach((snap, snapIndex) => {\n          slidesGrid[snapIndex] = snap + allSlidesOffset;\n        });\n      }\n    }\n    Object.assign(swiper, {\n      slides,\n      snapGrid,\n      slidesGrid,\n      slidesSizesGrid\n    });\n    if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {\n      setCSSProperty(wrapperEl, '--swiper-centered-offset-before', `${-snapGrid[0]}px`);\n      setCSSProperty(wrapperEl, '--swiper-centered-offset-after', `${swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2}px`);\n      const addToSnapGrid = -swiper.snapGrid[0];\n      const addToSlidesGrid = -swiper.slidesGrid[0];\n      swiper.snapGrid = swiper.snapGrid.map(v => v + addToSnapGrid);\n      swiper.slidesGrid = swiper.slidesGrid.map(v => v + addToSlidesGrid);\n    }\n    if (slidesLength !== previousSlidesLength) {\n      swiper.emit('slidesLengthChange');\n    }\n    if (snapGrid.length !== previousSnapGridLength) {\n      if (swiper.params.watchOverflow) swiper.checkOverflow();\n      swiper.emit('snapGridLengthChange');\n    }\n    if (slidesGrid.length !== previousSlidesGridLength) {\n      swiper.emit('slidesGridLengthChange');\n    }\n    if (params.watchSlidesProgress) {\n      swiper.updateSlidesOffset();\n    }\n    swiper.emit('slidesUpdated');\n    if (!isVirtual && !params.cssMode && (params.effect === 'slide' || params.effect === 'fade')) {\n      const backFaceHiddenClass = `${params.containerModifierClass}backface-hidden`;\n      const hasClassBackfaceClassAdded = swiper.el.classList.contains(backFaceHiddenClass);\n      if (slidesLength <= params.maxBackfaceHiddenSlides) {\n        if (!hasClassBackfaceClassAdded) swiper.el.classList.add(backFaceHiddenClass);\n      } else if (hasClassBackfaceClassAdded) {\n        swiper.el.classList.remove(backFaceHiddenClass);\n      }\n    }\n  }\n\n  function updateAutoHeight(speed) {\n    const swiper = this;\n    const activeSlides = [];\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let newHeight = 0;\n    let i;\n    if (typeof speed === 'number') {\n      swiper.setTransition(speed);\n    } else if (speed === true) {\n      swiper.setTransition(swiper.params.speed);\n    }\n    const getSlideByIndex = index => {\n      if (isVirtual) {\n        return swiper.slides[swiper.getSlideIndexByData(index)];\n      }\n      return swiper.slides[index];\n    };\n    // Find slides currently in view\n    if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n      if (swiper.params.centeredSlides) {\n        (swiper.visibleSlides || []).forEach(slide => {\n          activeSlides.push(slide);\n        });\n      } else {\n        for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n          const index = swiper.activeIndex + i;\n          if (index > swiper.slides.length && !isVirtual) break;\n          activeSlides.push(getSlideByIndex(index));\n        }\n      }\n    } else {\n      activeSlides.push(getSlideByIndex(swiper.activeIndex));\n    }\n\n    // Find new height from highest slide in view\n    for (i = 0; i < activeSlides.length; i += 1) {\n      if (typeof activeSlides[i] !== 'undefined') {\n        const height = activeSlides[i].offsetHeight;\n        newHeight = height > newHeight ? height : newHeight;\n      }\n    }\n\n    // Update Height\n    if (newHeight || newHeight === 0) swiper.wrapperEl.style.height = `${newHeight}px`;\n  }\n\n  function updateSlidesOffset() {\n    const swiper = this;\n    const slides = swiper.slides;\n    // eslint-disable-next-line\n    const minusOffset = swiper.isElement ? swiper.isHorizontal() ? swiper.wrapperEl.offsetLeft : swiper.wrapperEl.offsetTop : 0;\n    for (let i = 0; i < slides.length; i += 1) {\n      slides[i].swiperSlideOffset = (swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop) - minusOffset - swiper.cssOverflowAdjustment();\n    }\n  }\n\n  function updateSlidesProgress(translate) {\n    if (translate === void 0) {\n      translate = this && this.translate || 0;\n    }\n    const swiper = this;\n    const params = swiper.params;\n    const {\n      slides,\n      rtlTranslate: rtl,\n      snapGrid\n    } = swiper;\n    if (slides.length === 0) return;\n    if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n    let offsetCenter = -translate;\n    if (rtl) offsetCenter = translate;\n\n    // Visible Slides\n    slides.forEach(slideEl => {\n      slideEl.classList.remove(params.slideVisibleClass, params.slideFullyVisibleClass);\n    });\n    swiper.visibleSlidesIndexes = [];\n    swiper.visibleSlides = [];\n    let spaceBetween = params.spaceBetween;\n    if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n      spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiper.size;\n    } else if (typeof spaceBetween === 'string') {\n      spaceBetween = parseFloat(spaceBetween);\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const slide = slides[i];\n      let slideOffset = slide.swiperSlideOffset;\n      if (params.cssMode && params.centeredSlides) {\n        slideOffset -= slides[0].swiperSlideOffset;\n      }\n      const slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + spaceBetween);\n      const originalSlideProgress = (offsetCenter - snapGrid[0] + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + spaceBetween);\n      const slideBefore = -(offsetCenter - slideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isFullyVisible = slideBefore >= 0 && slideBefore <= swiper.size - swiper.slidesSizesGrid[i];\n      const isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\n      if (isVisible) {\n        swiper.visibleSlides.push(slide);\n        swiper.visibleSlidesIndexes.push(i);\n        slides[i].classList.add(params.slideVisibleClass);\n      }\n      if (isFullyVisible) {\n        slides[i].classList.add(params.slideFullyVisibleClass);\n      }\n      slide.progress = rtl ? -slideProgress : slideProgress;\n      slide.originalProgress = rtl ? -originalSlideProgress : originalSlideProgress;\n    }\n  }\n\n  function updateProgress(translate) {\n    const swiper = this;\n    if (typeof translate === 'undefined') {\n      const multiplier = swiper.rtlTranslate ? -1 : 1;\n      // eslint-disable-next-line\n      translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n    }\n    const params = swiper.params;\n    const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n    let {\n      progress,\n      isBeginning,\n      isEnd,\n      progressLoop\n    } = swiper;\n    const wasBeginning = isBeginning;\n    const wasEnd = isEnd;\n    if (translatesDiff === 0) {\n      progress = 0;\n      isBeginning = true;\n      isEnd = true;\n    } else {\n      progress = (translate - swiper.minTranslate()) / translatesDiff;\n      const isBeginningRounded = Math.abs(translate - swiper.minTranslate()) < 1;\n      const isEndRounded = Math.abs(translate - swiper.maxTranslate()) < 1;\n      isBeginning = isBeginningRounded || progress <= 0;\n      isEnd = isEndRounded || progress >= 1;\n      if (isBeginningRounded) progress = 0;\n      if (isEndRounded) progress = 1;\n    }\n    if (params.loop) {\n      const firstSlideIndex = swiper.getSlideIndexByData(0);\n      const lastSlideIndex = swiper.getSlideIndexByData(swiper.slides.length - 1);\n      const firstSlideTranslate = swiper.slidesGrid[firstSlideIndex];\n      const lastSlideTranslate = swiper.slidesGrid[lastSlideIndex];\n      const translateMax = swiper.slidesGrid[swiper.slidesGrid.length - 1];\n      const translateAbs = Math.abs(translate);\n      if (translateAbs >= firstSlideTranslate) {\n        progressLoop = (translateAbs - firstSlideTranslate) / translateMax;\n      } else {\n        progressLoop = (translateAbs + translateMax - lastSlideTranslate) / translateMax;\n      }\n      if (progressLoop > 1) progressLoop -= 1;\n    }\n    Object.assign(swiper, {\n      progress,\n      progressLoop,\n      isBeginning,\n      isEnd\n    });\n    if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n    if (isBeginning && !wasBeginning) {\n      swiper.emit('reachBeginning toEdge');\n    }\n    if (isEnd && !wasEnd) {\n      swiper.emit('reachEnd toEdge');\n    }\n    if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n      swiper.emit('fromEdge');\n    }\n    swiper.emit('progress', progress);\n  }\n\n  function updateSlidesClasses() {\n    const swiper = this;\n    const {\n      slides,\n      params,\n      slidesEl,\n      activeIndex\n    } = swiper;\n    const isVirtual = swiper.virtual && params.virtual.enabled;\n    const gridEnabled = swiper.grid && params.grid && params.grid.rows > 1;\n    const getFilteredSlide = selector => {\n      return elementChildren(slidesEl, `.${params.slideClass}${selector}, swiper-slide${selector}`)[0];\n    };\n    slides.forEach(slideEl => {\n      slideEl.classList.remove(params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n    });\n    let activeSlide;\n    let prevSlide;\n    let nextSlide;\n    if (isVirtual) {\n      if (params.loop) {\n        let slideIndex = activeIndex - swiper.virtual.slidesBefore;\n        if (slideIndex < 0) slideIndex = swiper.virtual.slides.length + slideIndex;\n        if (slideIndex >= swiper.virtual.slides.length) slideIndex -= swiper.virtual.slides.length;\n        activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${slideIndex}\"]`);\n      } else {\n        activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${activeIndex}\"]`);\n      }\n    } else {\n      if (gridEnabled) {\n        activeSlide = slides.filter(slideEl => slideEl.column === activeIndex)[0];\n        nextSlide = slides.filter(slideEl => slideEl.column === activeIndex + 1)[0];\n        prevSlide = slides.filter(slideEl => slideEl.column === activeIndex - 1)[0];\n      } else {\n        activeSlide = slides[activeIndex];\n      }\n    }\n    if (activeSlide) {\n      // Active classes\n      activeSlide.classList.add(params.slideActiveClass);\n      if (gridEnabled) {\n        if (nextSlide) {\n          nextSlide.classList.add(params.slideNextClass);\n        }\n        if (prevSlide) {\n          prevSlide.classList.add(params.slidePrevClass);\n        }\n      } else {\n        // Next Slide\n        nextSlide = elementNextAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n        if (params.loop && !nextSlide) {\n          nextSlide = slides[0];\n        }\n        if (nextSlide) {\n          nextSlide.classList.add(params.slideNextClass);\n        }\n\n        // Prev Slide\n        prevSlide = elementPrevAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n        if (params.loop && !prevSlide === 0) {\n          prevSlide = slides[slides.length - 1];\n        }\n        if (prevSlide) {\n          prevSlide.classList.add(params.slidePrevClass);\n        }\n      }\n    }\n    swiper.emitSlidesClasses();\n  }\n\n  const processLazyPreloader = (swiper, imageEl) => {\n    if (!swiper || swiper.destroyed || !swiper.params) return;\n    const slideSelector = () => swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n    const slideEl = imageEl.closest(slideSelector());\n    if (slideEl) {\n      let lazyEl = slideEl.querySelector(`.${swiper.params.lazyPreloaderClass}`);\n      if (!lazyEl && swiper.isElement) {\n        if (slideEl.shadowRoot) {\n          lazyEl = slideEl.shadowRoot.querySelector(`.${swiper.params.lazyPreloaderClass}`);\n        } else {\n          // init later\n          requestAnimationFrame(() => {\n            if (slideEl.shadowRoot) {\n              lazyEl = slideEl.shadowRoot.querySelector(`.${swiper.params.lazyPreloaderClass}`);\n              if (lazyEl) lazyEl.remove();\n            }\n          });\n        }\n      }\n      if (lazyEl) lazyEl.remove();\n    }\n  };\n  const unlazy = (swiper, index) => {\n    if (!swiper.slides[index]) return;\n    const imageEl = swiper.slides[index].querySelector('[loading=\"lazy\"]');\n    if (imageEl) imageEl.removeAttribute('loading');\n  };\n  const preload = swiper => {\n    if (!swiper || swiper.destroyed || !swiper.params) return;\n    let amount = swiper.params.lazyPreloadPrevNext;\n    const len = swiper.slides.length;\n    if (!len || !amount || amount < 0) return;\n    amount = Math.min(amount, len);\n    const slidesPerView = swiper.params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(swiper.params.slidesPerView);\n    const activeIndex = swiper.activeIndex;\n    if (swiper.params.grid && swiper.params.grid.rows > 1) {\n      const activeColumn = activeIndex;\n      const preloadColumns = [activeColumn - amount];\n      preloadColumns.push(...Array.from({\n        length: amount\n      }).map((_, i) => {\n        return activeColumn + slidesPerView + i;\n      }));\n      swiper.slides.forEach((slideEl, i) => {\n        if (preloadColumns.includes(slideEl.column)) unlazy(swiper, i);\n      });\n      return;\n    }\n    const slideIndexLastInView = activeIndex + slidesPerView - 1;\n    if (swiper.params.rewind || swiper.params.loop) {\n      for (let i = activeIndex - amount; i <= slideIndexLastInView + amount; i += 1) {\n        const realIndex = (i % len + len) % len;\n        if (realIndex < activeIndex || realIndex > slideIndexLastInView) unlazy(swiper, realIndex);\n      }\n    } else {\n      for (let i = Math.max(activeIndex - amount, 0); i <= Math.min(slideIndexLastInView + amount, len - 1); i += 1) {\n        if (i !== activeIndex && (i > slideIndexLastInView || i < activeIndex)) {\n          unlazy(swiper, i);\n        }\n      }\n    }\n  };\n\n  function getActiveIndexByTranslate(swiper) {\n    const {\n      slidesGrid,\n      params\n    } = swiper;\n    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n    let activeIndex;\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    }\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n    return activeIndex;\n  }\n  function updateActiveIndex(newActiveIndex) {\n    const swiper = this;\n    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n    const {\n      snapGrid,\n      params,\n      activeIndex: previousIndex,\n      realIndex: previousRealIndex,\n      snapIndex: previousSnapIndex\n    } = swiper;\n    let activeIndex = newActiveIndex;\n    let snapIndex;\n    const getVirtualRealIndex = aIndex => {\n      let realIndex = aIndex - swiper.virtual.slidesBefore;\n      if (realIndex < 0) {\n        realIndex = swiper.virtual.slides.length + realIndex;\n      }\n      if (realIndex >= swiper.virtual.slides.length) {\n        realIndex -= swiper.virtual.slides.length;\n      }\n      return realIndex;\n    };\n    if (typeof activeIndex === 'undefined') {\n      activeIndex = getActiveIndexByTranslate(swiper);\n    }\n    if (snapGrid.indexOf(translate) >= 0) {\n      snapIndex = snapGrid.indexOf(translate);\n    } else {\n      const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n      snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n    }\n    if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n    if (activeIndex === previousIndex && !swiper.params.loop) {\n      if (snapIndex !== previousSnapIndex) {\n        swiper.snapIndex = snapIndex;\n        swiper.emit('snapIndexChange');\n      }\n      return;\n    }\n    if (activeIndex === previousIndex && swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.realIndex = getVirtualRealIndex(activeIndex);\n      return;\n    }\n    const gridEnabled = swiper.grid && params.grid && params.grid.rows > 1;\n\n    // Get real index\n    let realIndex;\n    if (swiper.virtual && params.virtual.enabled && params.loop) {\n      realIndex = getVirtualRealIndex(activeIndex);\n    } else if (gridEnabled) {\n      const firstSlideInColumn = swiper.slides.filter(slideEl => slideEl.column === activeIndex)[0];\n      let activeSlideIndex = parseInt(firstSlideInColumn.getAttribute('data-swiper-slide-index'), 10);\n      if (Number.isNaN(activeSlideIndex)) {\n        activeSlideIndex = Math.max(swiper.slides.indexOf(firstSlideInColumn), 0);\n      }\n      realIndex = Math.floor(activeSlideIndex / params.grid.rows);\n    } else if (swiper.slides[activeIndex]) {\n      const slideIndex = swiper.slides[activeIndex].getAttribute('data-swiper-slide-index');\n      if (slideIndex) {\n        realIndex = parseInt(slideIndex, 10);\n      } else {\n        realIndex = activeIndex;\n      }\n    } else {\n      realIndex = activeIndex;\n    }\n    Object.assign(swiper, {\n      previousSnapIndex,\n      snapIndex,\n      previousRealIndex,\n      realIndex,\n      previousIndex,\n      activeIndex\n    });\n    if (swiper.initialized) {\n      preload(swiper);\n    }\n    swiper.emit('activeIndexChange');\n    swiper.emit('snapIndexChange');\n    if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n      if (previousRealIndex !== realIndex) {\n        swiper.emit('realIndexChange');\n      }\n      swiper.emit('slideChange');\n    }\n  }\n\n  function updateClickedSlide(el, path) {\n    const swiper = this;\n    const params = swiper.params;\n    let slide = el.closest(`.${params.slideClass}, swiper-slide`);\n    if (!slide && swiper.isElement && path && path.length > 1 && path.includes(el)) {\n      [...path.slice(path.indexOf(el) + 1, path.length)].forEach(pathEl => {\n        if (!slide && pathEl.matches && pathEl.matches(`.${params.slideClass}, swiper-slide`)) {\n          slide = pathEl;\n        }\n      });\n    }\n    let slideFound = false;\n    let slideIndex;\n    if (slide) {\n      for (let i = 0; i < swiper.slides.length; i += 1) {\n        if (swiper.slides[i] === slide) {\n          slideFound = true;\n          slideIndex = i;\n          break;\n        }\n      }\n    }\n    if (slide && slideFound) {\n      swiper.clickedSlide = slide;\n      if (swiper.virtual && swiper.params.virtual.enabled) {\n        swiper.clickedIndex = parseInt(slide.getAttribute('data-swiper-slide-index'), 10);\n      } else {\n        swiper.clickedIndex = slideIndex;\n      }\n    } else {\n      swiper.clickedSlide = undefined;\n      swiper.clickedIndex = undefined;\n      return;\n    }\n    if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n      swiper.slideToClickedSlide();\n    }\n  }\n\n  var update = {\n    updateSize,\n    updateSlides,\n    updateAutoHeight,\n    updateSlidesOffset,\n    updateSlidesProgress,\n    updateProgress,\n    updateSlidesClasses,\n    updateActiveIndex,\n    updateClickedSlide\n  };\n\n  function getSwiperTranslate(axis) {\n    if (axis === void 0) {\n      axis = this.isHorizontal() ? 'x' : 'y';\n    }\n    const swiper = this;\n    const {\n      params,\n      rtlTranslate: rtl,\n      translate,\n      wrapperEl\n    } = swiper;\n    if (params.virtualTranslate) {\n      return rtl ? -translate : translate;\n    }\n    if (params.cssMode) {\n      return translate;\n    }\n    let currentTranslate = getTranslate(wrapperEl, axis);\n    currentTranslate += swiper.cssOverflowAdjustment();\n    if (rtl) currentTranslate = -currentTranslate;\n    return currentTranslate || 0;\n  }\n\n  function setTranslate(translate, byController) {\n    const swiper = this;\n    const {\n      rtlTranslate: rtl,\n      params,\n      wrapperEl,\n      progress\n    } = swiper;\n    let x = 0;\n    let y = 0;\n    const z = 0;\n    if (swiper.isHorizontal()) {\n      x = rtl ? -translate : translate;\n    } else {\n      y = translate;\n    }\n    if (params.roundLengths) {\n      x = Math.floor(x);\n      y = Math.floor(y);\n    }\n    swiper.previousTranslate = swiper.translate;\n    swiper.translate = swiper.isHorizontal() ? x : y;\n    if (params.cssMode) {\n      wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n    } else if (!params.virtualTranslate) {\n      if (swiper.isHorizontal()) {\n        x -= swiper.cssOverflowAdjustment();\n      } else {\n        y -= swiper.cssOverflowAdjustment();\n      }\n      wrapperEl.style.transform = `translate3d(${x}px, ${y}px, ${z}px)`;\n    }\n\n    // Check if we need to update progress\n    let newProgress;\n    const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n    if (translatesDiff === 0) {\n      newProgress = 0;\n    } else {\n      newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n    }\n    if (newProgress !== progress) {\n      swiper.updateProgress(translate);\n    }\n    swiper.emit('setTranslate', swiper.translate, byController);\n  }\n\n  function minTranslate() {\n    return -this.snapGrid[0];\n  }\n\n  function maxTranslate() {\n    return -this.snapGrid[this.snapGrid.length - 1];\n  }\n\n  function translateTo(translate, speed, runCallbacks, translateBounds, internal) {\n    if (translate === void 0) {\n      translate = 0;\n    }\n    if (speed === void 0) {\n      speed = this.params.speed;\n    }\n    if (runCallbacks === void 0) {\n      runCallbacks = true;\n    }\n    if (translateBounds === void 0) {\n      translateBounds = true;\n    }\n    const swiper = this;\n    const {\n      params,\n      wrapperEl\n    } = swiper;\n    if (swiper.animating && params.preventInteractionOnTransition) {\n      return false;\n    }\n    const minTranslate = swiper.minTranslate();\n    const maxTranslate = swiper.maxTranslate();\n    let newTranslate;\n    if (translateBounds && translate > minTranslate) newTranslate = minTranslate;else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;else newTranslate = translate;\n\n    // Update progress\n    swiper.updateProgress(newTranslate);\n    if (params.cssMode) {\n      const isH = swiper.isHorizontal();\n      if (speed === 0) {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n      } else {\n        if (!swiper.support.smoothScroll) {\n          animateCSSModeScroll({\n            swiper,\n            targetPosition: -newTranslate,\n            side: isH ? 'left' : 'top'\n          });\n          return true;\n        }\n        wrapperEl.scrollTo({\n          [isH ? 'left' : 'top']: -newTranslate,\n          behavior: 'smooth'\n        });\n      }\n      return true;\n    }\n    if (speed === 0) {\n      swiper.setTransition(0);\n      swiper.setTranslate(newTranslate);\n      if (runCallbacks) {\n        swiper.emit('beforeTransitionStart', speed, internal);\n        swiper.emit('transitionEnd');\n      }\n    } else {\n      swiper.setTransition(speed);\n      swiper.setTranslate(newTranslate);\n      if (runCallbacks) {\n        swiper.emit('beforeTransitionStart', speed, internal);\n        swiper.emit('transitionStart');\n      }\n      if (!swiper.animating) {\n        swiper.animating = true;\n        if (!swiper.onTranslateToWrapperTransitionEnd) {\n          swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n            if (!swiper || swiper.destroyed) return;\n            if (e.target !== this) return;\n            swiper.wrapperEl.removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n            swiper.onTranslateToWrapperTransitionEnd = null;\n            delete swiper.onTranslateToWrapperTransitionEnd;\n            if (runCallbacks) {\n              swiper.emit('transitionEnd');\n            }\n          };\n        }\n        swiper.wrapperEl.addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n      }\n    }\n    return true;\n  }\n\n  var translate = {\n    getTranslate: getSwiperTranslate,\n    setTranslate,\n    minTranslate,\n    maxTranslate,\n    translateTo\n  };\n\n  function setTransition(duration, byController) {\n    const swiper = this;\n    if (!swiper.params.cssMode) {\n      swiper.wrapperEl.style.transitionDuration = `${duration}ms`;\n      swiper.wrapperEl.style.transitionDelay = duration === 0 ? `0ms` : '';\n    }\n    swiper.emit('setTransition', duration, byController);\n  }\n\n  function transitionEmit(_ref) {\n    let {\n      swiper,\n      runCallbacks,\n      direction,\n      step\n    } = _ref;\n    const {\n      activeIndex,\n      previousIndex\n    } = swiper;\n    let dir = direction;\n    if (!dir) {\n      if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';\n    }\n    swiper.emit(`transition${step}`);\n    if (runCallbacks && activeIndex !== previousIndex) {\n      if (dir === 'reset') {\n        swiper.emit(`slideResetTransition${step}`);\n        return;\n      }\n      swiper.emit(`slideChangeTransition${step}`);\n      if (dir === 'next') {\n        swiper.emit(`slideNextTransition${step}`);\n      } else {\n        swiper.emit(`slidePrevTransition${step}`);\n      }\n    }\n  }\n\n  function transitionStart(runCallbacks, direction) {\n    if (runCallbacks === void 0) {\n      runCallbacks = true;\n    }\n    const swiper = this;\n    const {\n      params\n    } = swiper;\n    if (params.cssMode) return;\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    transitionEmit({\n      swiper,\n      runCallbacks,\n      direction,\n      step: 'Start'\n    });\n  }\n\n  function transitionEnd(runCallbacks, direction) {\n    if (runCallbacks === void 0) {\n      runCallbacks = true;\n    }\n    const swiper = this;\n    const {\n      params\n    } = swiper;\n    swiper.animating = false;\n    if (params.cssMode) return;\n    swiper.setTransition(0);\n    transitionEmit({\n      swiper,\n      runCallbacks,\n      direction,\n      step: 'End'\n    });\n  }\n\n  var transition = {\n    setTransition,\n    transitionStart,\n    transitionEnd\n  };\n\n  function slideTo(index, speed, runCallbacks, internal, initial) {\n    if (index === void 0) {\n      index = 0;\n    }\n    if (speed === void 0) {\n      speed = this.params.speed;\n    }\n    if (runCallbacks === void 0) {\n      runCallbacks = true;\n    }\n    if (typeof index === 'string') {\n      index = parseInt(index, 10);\n    }\n    const swiper = this;\n    let slideIndex = index;\n    if (slideIndex < 0) slideIndex = 0;\n    const {\n      params,\n      snapGrid,\n      slidesGrid,\n      previousIndex,\n      activeIndex,\n      rtlTranslate: rtl,\n      wrapperEl,\n      enabled\n    } = swiper;\n    if (swiper.animating && params.preventInteractionOnTransition || !enabled && !internal && !initial) {\n      return false;\n    }\n    const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n    let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n    if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n    const translate = -snapGrid[snapIndex];\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      for (let i = 0; i < slidesGrid.length; i += 1) {\n        const normalizedTranslate = -Math.floor(translate * 100);\n        const normalizedGrid = Math.floor(slidesGrid[i] * 100);\n        const normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\n        if (typeof slidesGrid[i + 1] !== 'undefined') {\n          if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGrid) / 2) {\n            slideIndex = i;\n          } else if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext) {\n            slideIndex = i + 1;\n          }\n        } else if (normalizedTranslate >= normalizedGrid) {\n          slideIndex = i;\n        }\n      }\n    }\n    // Directions locks\n    if (swiper.initialized && slideIndex !== activeIndex) {\n      if (!swiper.allowSlideNext && (rtl ? translate > swiper.translate && translate > swiper.minTranslate() : translate < swiper.translate && translate < swiper.minTranslate())) {\n        return false;\n      }\n      if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n        if ((activeIndex || 0) !== slideIndex) {\n          return false;\n        }\n      }\n    }\n    if (slideIndex !== (previousIndex || 0) && runCallbacks) {\n      swiper.emit('beforeSlideChangeStart');\n    }\n\n    // Update progress\n    swiper.updateProgress(translate);\n    let direction;\n    if (slideIndex > activeIndex) direction = 'next';else if (slideIndex < activeIndex) direction = 'prev';else direction = 'reset';\n\n    // Update Index\n    if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\n      swiper.updateActiveIndex(slideIndex);\n      // Update Height\n      if (params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n      swiper.updateSlidesClasses();\n      if (params.effect !== 'slide') {\n        swiper.setTranslate(translate);\n      }\n      if (direction !== 'reset') {\n        swiper.transitionStart(runCallbacks, direction);\n        swiper.transitionEnd(runCallbacks, direction);\n      }\n      return false;\n    }\n    if (params.cssMode) {\n      const isH = swiper.isHorizontal();\n      const t = rtl ? translate : -translate;\n      if (speed === 0) {\n        const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n        if (isVirtual) {\n          swiper.wrapperEl.style.scrollSnapType = 'none';\n          swiper._immediateVirtual = true;\n        }\n        if (isVirtual && !swiper._cssModeVirtualInitialSet && swiper.params.initialSlide > 0) {\n          swiper._cssModeVirtualInitialSet = true;\n          requestAnimationFrame(() => {\n            wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n          });\n        } else {\n          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n        }\n        if (isVirtual) {\n          requestAnimationFrame(() => {\n            swiper.wrapperEl.style.scrollSnapType = '';\n            swiper._immediateVirtual = false;\n          });\n        }\n      } else {\n        if (!swiper.support.smoothScroll) {\n          animateCSSModeScroll({\n            swiper,\n            targetPosition: t,\n            side: isH ? 'left' : 'top'\n          });\n          return true;\n        }\n        wrapperEl.scrollTo({\n          [isH ? 'left' : 'top']: t,\n          behavior: 'smooth'\n        });\n      }\n      return true;\n    }\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (speed === 0) {\n      swiper.transitionEnd(runCallbacks, direction);\n    } else if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.wrapperEl.removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.onSlideToWrapperTransitionEnd = null;\n          delete swiper.onSlideToWrapperTransitionEnd;\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n      swiper.wrapperEl.addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n    }\n    return true;\n  }\n\n  function slideToLoop(index, speed, runCallbacks, internal) {\n    if (index === void 0) {\n      index = 0;\n    }\n    if (speed === void 0) {\n      speed = this.params.speed;\n    }\n    if (runCallbacks === void 0) {\n      runCallbacks = true;\n    }\n    if (typeof index === 'string') {\n      const indexAsNumber = parseInt(index, 10);\n      index = indexAsNumber;\n    }\n    const swiper = this;\n    const gridEnabled = swiper.grid && swiper.params.grid && swiper.params.grid.rows > 1;\n    let newIndex = index;\n    if (swiper.params.loop) {\n      if (swiper.virtual && swiper.params.virtual.enabled) {\n        // eslint-disable-next-line\n        newIndex = newIndex + swiper.virtual.slidesBefore;\n      } else {\n        let targetSlideIndex;\n        if (gridEnabled) {\n          const slideIndex = newIndex * swiper.params.grid.rows;\n          targetSlideIndex = swiper.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') * 1 === slideIndex)[0].column;\n        } else {\n          targetSlideIndex = swiper.getSlideIndexByData(newIndex);\n        }\n        const cols = gridEnabled ? Math.ceil(swiper.slides.length / swiper.params.grid.rows) : swiper.slides.length;\n        const {\n          centeredSlides\n        } = swiper.params;\n        let slidesPerView = swiper.params.slidesPerView;\n        if (slidesPerView === 'auto') {\n          slidesPerView = swiper.slidesPerViewDynamic();\n        } else {\n          slidesPerView = Math.ceil(parseFloat(swiper.params.slidesPerView, 10));\n          if (centeredSlides && slidesPerView % 2 === 0) {\n            slidesPerView = slidesPerView + 1;\n          }\n        }\n        let needLoopFix = cols - targetSlideIndex < slidesPerView;\n        if (centeredSlides) {\n          needLoopFix = needLoopFix || targetSlideIndex < Math.ceil(slidesPerView / 2);\n        }\n        if (needLoopFix) {\n          const direction = centeredSlides ? targetSlideIndex < swiper.activeIndex ? 'prev' : 'next' : targetSlideIndex - swiper.activeIndex - 1 < swiper.params.slidesPerView ? 'next' : 'prev';\n          swiper.loopFix({\n            direction,\n            slideTo: true,\n            activeSlideIndex: direction === 'next' ? targetSlideIndex + 1 : targetSlideIndex - cols + 1,\n            slideRealIndex: direction === 'next' ? swiper.realIndex : undefined\n          });\n        }\n        if (gridEnabled) {\n          const slideIndex = newIndex * swiper.params.grid.rows;\n          newIndex = swiper.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') * 1 === slideIndex)[0].column;\n        } else {\n          newIndex = swiper.getSlideIndexByData(newIndex);\n        }\n      }\n    }\n    requestAnimationFrame(() => {\n      swiper.slideTo(newIndex, speed, runCallbacks, internal);\n    });\n    return swiper;\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slideNext(speed, runCallbacks, internal) {\n    if (speed === void 0) {\n      speed = this.params.speed;\n    }\n    if (runCallbacks === void 0) {\n      runCallbacks = true;\n    }\n    const swiper = this;\n    const {\n      enabled,\n      params,\n      animating\n    } = swiper;\n    if (!enabled) return swiper;\n    let perGroup = params.slidesPerGroup;\n    if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n      perGroup = Math.max(swiper.slidesPerViewDynamic('current', true), 1);\n    }\n    const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;\n    const isVirtual = swiper.virtual && params.virtual.enabled;\n    if (params.loop) {\n      if (animating && !isVirtual && params.loopPreventsSliding) return false;\n      swiper.loopFix({\n        direction: 'next'\n      });\n      // eslint-disable-next-line\n      swiper._clientLeft = swiper.wrapperEl.clientLeft;\n      if (swiper.activeIndex === swiper.slides.length - 1 && params.cssMode) {\n        requestAnimationFrame(() => {\n          swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n        });\n        return true;\n      }\n    }\n    if (params.rewind && swiper.isEnd) {\n      return swiper.slideTo(0, speed, runCallbacks, internal);\n    }\n    return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slidePrev(speed, runCallbacks, internal) {\n    if (speed === void 0) {\n      speed = this.params.speed;\n    }\n    if (runCallbacks === void 0) {\n      runCallbacks = true;\n    }\n    const swiper = this;\n    const {\n      params,\n      snapGrid,\n      slidesGrid,\n      rtlTranslate,\n      enabled,\n      animating\n    } = swiper;\n    if (!enabled) return swiper;\n    const isVirtual = swiper.virtual && params.virtual.enabled;\n    if (params.loop) {\n      if (animating && !isVirtual && params.loopPreventsSliding) return false;\n      swiper.loopFix({\n        direction: 'prev'\n      });\n      // eslint-disable-next-line\n      swiper._clientLeft = swiper.wrapperEl.clientLeft;\n    }\n    const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n    function normalize(val) {\n      if (val < 0) return -Math.floor(Math.abs(val));\n      return Math.floor(val);\n    }\n    const normalizedTranslate = normalize(translate);\n    const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n    let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n    if (typeof prevSnap === 'undefined' && params.cssMode) {\n      let prevSnapIndex;\n      snapGrid.forEach((snap, snapIndex) => {\n        if (normalizedTranslate >= snap) {\n          // prevSnap = snap;\n          prevSnapIndex = snapIndex;\n        }\n      });\n      if (typeof prevSnapIndex !== 'undefined') {\n        prevSnap = snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];\n      }\n    }\n    let prevIndex = 0;\n    if (typeof prevSnap !== 'undefined') {\n      prevIndex = slidesGrid.indexOf(prevSnap);\n      if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n      if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n        prevIndex = prevIndex - swiper.slidesPerViewDynamic('previous', true) + 1;\n        prevIndex = Math.max(prevIndex, 0);\n      }\n    }\n    if (params.rewind && swiper.isBeginning) {\n      const lastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n      return swiper.slideTo(lastIndex, speed, runCallbacks, internal);\n    } else if (params.loop && swiper.activeIndex === 0 && params.cssMode) {\n      requestAnimationFrame(() => {\n        swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n      });\n      return true;\n    }\n    return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slideReset(speed, runCallbacks, internal) {\n    if (speed === void 0) {\n      speed = this.params.speed;\n    }\n    if (runCallbacks === void 0) {\n      runCallbacks = true;\n    }\n    const swiper = this;\n    return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slideToClosest(speed, runCallbacks, internal, threshold) {\n    if (speed === void 0) {\n      speed = this.params.speed;\n    }\n    if (runCallbacks === void 0) {\n      runCallbacks = true;\n    }\n    if (threshold === void 0) {\n      threshold = 0.5;\n    }\n    const swiper = this;\n    let index = swiper.activeIndex;\n    const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n    const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n    if (translate >= swiper.snapGrid[snapIndex]) {\n      // The current translate is on or after the current snap index, so the choice\n      // is between the current index and the one after it.\n      const currentSnap = swiper.snapGrid[snapIndex];\n      const nextSnap = swiper.snapGrid[snapIndex + 1];\n      if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\n        index += swiper.params.slidesPerGroup;\n      }\n    } else {\n      // The current translate is before the current snap index, so the choice\n      // is between the current index and the one before it.\n      const prevSnap = swiper.snapGrid[snapIndex - 1];\n      const currentSnap = swiper.snapGrid[snapIndex];\n      if (translate - prevSnap <= (currentSnap - prevSnap) * threshold) {\n        index -= swiper.params.slidesPerGroup;\n      }\n    }\n    index = Math.max(index, 0);\n    index = Math.min(index, swiper.slidesGrid.length - 1);\n    return swiper.slideTo(index, speed, runCallbacks, internal);\n  }\n\n  function slideToClickedSlide() {\n    const swiper = this;\n    const {\n      params,\n      slidesEl\n    } = swiper;\n    const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n    let slideToIndex = swiper.clickedIndex;\n    let realIndex;\n    const slideSelector = swiper.isElement ? `swiper-slide` : `.${params.slideClass}`;\n    if (params.loop) {\n      if (swiper.animating) return;\n      realIndex = parseInt(swiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n      if (params.centeredSlides) {\n        if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {\n          swiper.loopFix();\n          slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n          nextTick(() => {\n            swiper.slideTo(slideToIndex);\n          });\n        } else {\n          swiper.slideTo(slideToIndex);\n        }\n      } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n        swiper.loopFix();\n        slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n        nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  }\n\n  var slide = {\n    slideTo,\n    slideToLoop,\n    slideNext,\n    slidePrev,\n    slideReset,\n    slideToClosest,\n    slideToClickedSlide\n  };\n\n  function loopCreate(slideRealIndex) {\n    const swiper = this;\n    const {\n      params,\n      slidesEl\n    } = swiper;\n    if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n    const initSlides = () => {\n      const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n      slides.forEach((el, index) => {\n        el.setAttribute('data-swiper-slide-index', index);\n      });\n    };\n    const gridEnabled = swiper.grid && params.grid && params.grid.rows > 1;\n    const slidesPerGroup = params.slidesPerGroup * (gridEnabled ? params.grid.rows : 1);\n    const shouldFillGroup = swiper.slides.length % slidesPerGroup !== 0;\n    const shouldFillGrid = gridEnabled && swiper.slides.length % params.grid.rows !== 0;\n    const addBlankSlides = amountOfSlides => {\n      for (let i = 0; i < amountOfSlides; i += 1) {\n        const slideEl = swiper.isElement ? createElement('swiper-slide', [params.slideBlankClass]) : createElement('div', [params.slideClass, params.slideBlankClass]);\n        swiper.slidesEl.append(slideEl);\n      }\n    };\n    if (shouldFillGroup) {\n      if (params.loopAddBlankSlides) {\n        const slidesToAdd = slidesPerGroup - swiper.slides.length % slidesPerGroup;\n        addBlankSlides(slidesToAdd);\n        swiper.recalcSlides();\n        swiper.updateSlides();\n      } else {\n        showWarning('Swiper Loop Warning: The number of slides is not even to slidesPerGroup, loop mode may not function properly. You need to add more slides (or make duplicates, or empty slides)');\n      }\n      initSlides();\n    } else if (shouldFillGrid) {\n      if (params.loopAddBlankSlides) {\n        const slidesToAdd = params.grid.rows - swiper.slides.length % params.grid.rows;\n        addBlankSlides(slidesToAdd);\n        swiper.recalcSlides();\n        swiper.updateSlides();\n      } else {\n        showWarning('Swiper Loop Warning: The number of slides is not even to grid.rows, loop mode may not function properly. You need to add more slides (or make duplicates, or empty slides)');\n      }\n      initSlides();\n    } else {\n      initSlides();\n    }\n    swiper.loopFix({\n      slideRealIndex,\n      direction: params.centeredSlides ? undefined : 'next'\n    });\n  }\n\n  function loopFix(_temp) {\n    let {\n      slideRealIndex,\n      slideTo = true,\n      direction,\n      setTranslate,\n      activeSlideIndex,\n      byController,\n      byMousewheel\n    } = _temp === void 0 ? {} : _temp;\n    const swiper = this;\n    if (!swiper.params.loop) return;\n    swiper.emit('beforeLoopFix');\n    const {\n      slides,\n      allowSlidePrev,\n      allowSlideNext,\n      slidesEl,\n      params\n    } = swiper;\n    const {\n      centeredSlides\n    } = params;\n    swiper.allowSlidePrev = true;\n    swiper.allowSlideNext = true;\n    if (swiper.virtual && params.virtual.enabled) {\n      if (slideTo) {\n        if (!params.centeredSlides && swiper.snapIndex === 0) {\n          swiper.slideTo(swiper.virtual.slides.length, 0, false, true);\n        } else if (params.centeredSlides && swiper.snapIndex < params.slidesPerView) {\n          swiper.slideTo(swiper.virtual.slides.length + swiper.snapIndex, 0, false, true);\n        } else if (swiper.snapIndex === swiper.snapGrid.length - 1) {\n          swiper.slideTo(swiper.virtual.slidesBefore, 0, false, true);\n        }\n      }\n      swiper.allowSlidePrev = allowSlidePrev;\n      swiper.allowSlideNext = allowSlideNext;\n      swiper.emit('loopFix');\n      return;\n    }\n    let slidesPerView = params.slidesPerView;\n    if (slidesPerView === 'auto') {\n      slidesPerView = swiper.slidesPerViewDynamic();\n    } else {\n      slidesPerView = Math.ceil(parseFloat(params.slidesPerView, 10));\n      if (centeredSlides && slidesPerView % 2 === 0) {\n        slidesPerView = slidesPerView + 1;\n      }\n    }\n    const slidesPerGroup = params.slidesPerGroupAuto ? slidesPerView : params.slidesPerGroup;\n    let loopedSlides = slidesPerGroup;\n    if (loopedSlides % slidesPerGroup !== 0) {\n      loopedSlides += slidesPerGroup - loopedSlides % slidesPerGroup;\n    }\n    loopedSlides += params.loopAdditionalSlides;\n    swiper.loopedSlides = loopedSlides;\n    const gridEnabled = swiper.grid && params.grid && params.grid.rows > 1;\n    if (slides.length < slidesPerView + loopedSlides) {\n      showWarning('Swiper Loop Warning: The number of slides is not enough for loop mode, it will be disabled and not function properly. You need to add more slides (or make duplicates) or lower the values of slidesPerView and slidesPerGroup parameters');\n    } else if (gridEnabled && params.grid.fill === 'row') {\n      showWarning('Swiper Loop Warning: Loop mode is not compatible with grid.fill = `row`');\n    }\n    const prependSlidesIndexes = [];\n    const appendSlidesIndexes = [];\n    let activeIndex = swiper.activeIndex;\n    if (typeof activeSlideIndex === 'undefined') {\n      activeSlideIndex = swiper.getSlideIndex(slides.filter(el => el.classList.contains(params.slideActiveClass))[0]);\n    } else {\n      activeIndex = activeSlideIndex;\n    }\n    const isNext = direction === 'next' || !direction;\n    const isPrev = direction === 'prev' || !direction;\n    let slidesPrepended = 0;\n    let slidesAppended = 0;\n    const cols = gridEnabled ? Math.ceil(slides.length / params.grid.rows) : slides.length;\n    const activeColIndex = gridEnabled ? slides[activeSlideIndex].column : activeSlideIndex;\n    const activeColIndexWithShift = activeColIndex + (centeredSlides && typeof setTranslate === 'undefined' ? -slidesPerView / 2 + 0.5 : 0);\n    // prepend last slides before start\n    if (activeColIndexWithShift < loopedSlides) {\n      slidesPrepended = Math.max(loopedSlides - activeColIndexWithShift, slidesPerGroup);\n      for (let i = 0; i < loopedSlides - activeColIndexWithShift; i += 1) {\n        const index = i - Math.floor(i / cols) * cols;\n        if (gridEnabled) {\n          const colIndexToPrepend = cols - index - 1;\n          for (let i = slides.length - 1; i >= 0; i -= 1) {\n            if (slides[i].column === colIndexToPrepend) prependSlidesIndexes.push(i);\n          }\n          // slides.forEach((slide, slideIndex) => {\n          //   if (slide.column === colIndexToPrepend) prependSlidesIndexes.push(slideIndex);\n          // });\n        } else {\n          prependSlidesIndexes.push(cols - index - 1);\n        }\n      }\n    } else if (activeColIndexWithShift + slidesPerView > cols - loopedSlides) {\n      slidesAppended = Math.max(activeColIndexWithShift - (cols - loopedSlides * 2), slidesPerGroup);\n      for (let i = 0; i < slidesAppended; i += 1) {\n        const index = i - Math.floor(i / cols) * cols;\n        if (gridEnabled) {\n          slides.forEach((slide, slideIndex) => {\n            if (slide.column === index) appendSlidesIndexes.push(slideIndex);\n          });\n        } else {\n          appendSlidesIndexes.push(index);\n        }\n      }\n    }\n    swiper.__preventObserver__ = true;\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n    if (isPrev) {\n      prependSlidesIndexes.forEach(index => {\n        slides[index].swiperLoopMoveDOM = true;\n        slidesEl.prepend(slides[index]);\n        slides[index].swiperLoopMoveDOM = false;\n      });\n    }\n    if (isNext) {\n      appendSlidesIndexes.forEach(index => {\n        slides[index].swiperLoopMoveDOM = true;\n        slidesEl.append(slides[index]);\n        slides[index].swiperLoopMoveDOM = false;\n      });\n    }\n    swiper.recalcSlides();\n    if (params.slidesPerView === 'auto') {\n      swiper.updateSlides();\n    } else if (gridEnabled && (prependSlidesIndexes.length > 0 && isPrev || appendSlidesIndexes.length > 0 && isNext)) {\n      swiper.slides.forEach((slide, slideIndex) => {\n        swiper.grid.updateSlide(slideIndex, slide, swiper.slides);\n      });\n    }\n    if (params.watchSlidesProgress) {\n      swiper.updateSlidesOffset();\n    }\n    if (slideTo) {\n      if (prependSlidesIndexes.length > 0 && isPrev) {\n        if (typeof slideRealIndex === 'undefined') {\n          const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n          const newSlideTranslate = swiper.slidesGrid[activeIndex + slidesPrepended];\n          const diff = newSlideTranslate - currentSlideTranslate;\n          if (byMousewheel) {\n            swiper.setTranslate(swiper.translate - diff);\n          } else {\n            swiper.slideTo(activeIndex + slidesPrepended, 0, false, true);\n            if (setTranslate) {\n              swiper.touchEventsData.startTranslate = swiper.touchEventsData.startTranslate - diff;\n              swiper.touchEventsData.currentTranslate = swiper.touchEventsData.currentTranslate - diff;\n            }\n          }\n        } else {\n          if (setTranslate) {\n            const shift = gridEnabled ? prependSlidesIndexes.length / params.grid.rows : prependSlidesIndexes.length;\n            swiper.slideTo(swiper.activeIndex + shift, 0, false, true);\n            swiper.touchEventsData.currentTranslate = swiper.translate;\n          }\n        }\n      } else if (appendSlidesIndexes.length > 0 && isNext) {\n        if (typeof slideRealIndex === 'undefined') {\n          const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n          const newSlideTranslate = swiper.slidesGrid[activeIndex - slidesAppended];\n          const diff = newSlideTranslate - currentSlideTranslate;\n          if (byMousewheel) {\n            swiper.setTranslate(swiper.translate - diff);\n          } else {\n            swiper.slideTo(activeIndex - slidesAppended, 0, false, true);\n            if (setTranslate) {\n              swiper.touchEventsData.startTranslate = swiper.touchEventsData.startTranslate - diff;\n              swiper.touchEventsData.currentTranslate = swiper.touchEventsData.currentTranslate - diff;\n            }\n          }\n        } else {\n          const shift = gridEnabled ? appendSlidesIndexes.length / params.grid.rows : appendSlidesIndexes.length;\n          swiper.slideTo(swiper.activeIndex - shift, 0, false, true);\n        }\n      }\n    }\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n    if (swiper.controller && swiper.controller.control && !byController) {\n      const loopParams = {\n        slideRealIndex,\n        direction,\n        setTranslate,\n        activeSlideIndex,\n        byController: true\n      };\n      if (Array.isArray(swiper.controller.control)) {\n        swiper.controller.control.forEach(c => {\n          if (!c.destroyed && c.params.loop) c.loopFix({\n            ...loopParams,\n            slideTo: c.params.slidesPerView === params.slidesPerView ? slideTo : false\n          });\n        });\n      } else if (swiper.controller.control instanceof swiper.constructor && swiper.controller.control.params.loop) {\n        swiper.controller.control.loopFix({\n          ...loopParams,\n          slideTo: swiper.controller.control.params.slidesPerView === params.slidesPerView ? slideTo : false\n        });\n      }\n    }\n    swiper.emit('loopFix');\n  }\n\n  function loopDestroy() {\n    const swiper = this;\n    const {\n      params,\n      slidesEl\n    } = swiper;\n    if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n    swiper.recalcSlides();\n    const newSlidesOrder = [];\n    swiper.slides.forEach(slideEl => {\n      const index = typeof slideEl.swiperSlideIndex === 'undefined' ? slideEl.getAttribute('data-swiper-slide-index') * 1 : slideEl.swiperSlideIndex;\n      newSlidesOrder[index] = slideEl;\n    });\n    swiper.slides.forEach(slideEl => {\n      slideEl.removeAttribute('data-swiper-slide-index');\n    });\n    newSlidesOrder.forEach(slideEl => {\n      slidesEl.append(slideEl);\n    });\n    swiper.recalcSlides();\n    swiper.slideTo(swiper.realIndex, 0);\n  }\n\n  var loop = {\n    loopCreate,\n    loopFix,\n    loopDestroy\n  };\n\n  function setGrabCursor(moving) {\n    const swiper = this;\n    if (!swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\n    const el = swiper.params.touchEventsTarget === 'container' ? swiper.el : swiper.wrapperEl;\n    if (swiper.isElement) {\n      swiper.__preventObserver__ = true;\n    }\n    el.style.cursor = 'move';\n    el.style.cursor = moving ? 'grabbing' : 'grab';\n    if (swiper.isElement) {\n      requestAnimationFrame(() => {\n        swiper.__preventObserver__ = false;\n      });\n    }\n  }\n\n  function unsetGrabCursor() {\n    const swiper = this;\n    if (swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\n      return;\n    }\n    if (swiper.isElement) {\n      swiper.__preventObserver__ = true;\n    }\n    swiper[swiper.params.touchEventsTarget === 'container' ? 'el' : 'wrapperEl'].style.cursor = '';\n    if (swiper.isElement) {\n      requestAnimationFrame(() => {\n        swiper.__preventObserver__ = false;\n      });\n    }\n  }\n\n  var grabCursor = {\n    setGrabCursor,\n    unsetGrabCursor\n  };\n\n  // Modified from https://stackoverflow.com/questions/54520554/custom-element-getrootnode-closest-function-crossing-multiple-parent-shadowd\n  function closestElement(selector, base) {\n    if (base === void 0) {\n      base = this;\n    }\n    function __closestFrom(el) {\n      if (!el || el === getDocument() || el === getWindow()) return null;\n      if (el.assignedSlot) el = el.assignedSlot;\n      const found = el.closest(selector);\n      if (!found && !el.getRootNode) {\n        return null;\n      }\n      return found || __closestFrom(el.getRootNode().host);\n    }\n    return __closestFrom(base);\n  }\n  function preventEdgeSwipe(swiper, event, startX) {\n    const window = getWindow();\n    const {\n      params\n    } = swiper;\n    const edgeSwipeDetection = params.edgeSwipeDetection;\n    const edgeSwipeThreshold = params.edgeSwipeThreshold;\n    if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {\n      if (edgeSwipeDetection === 'prevent') {\n        event.preventDefault();\n        return true;\n      }\n      return false;\n    }\n    return true;\n  }\n  function onTouchStart(event) {\n    const swiper = this;\n    const document = getDocument();\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent;\n    const data = swiper.touchEventsData;\n    if (e.type === 'pointerdown') {\n      if (data.pointerId !== null && data.pointerId !== e.pointerId) {\n        return;\n      }\n      data.pointerId = e.pointerId;\n    } else if (e.type === 'touchstart' && e.targetTouches.length === 1) {\n      data.touchId = e.targetTouches[0].identifier;\n    }\n    if (e.type === 'touchstart') {\n      // don't proceed touch event\n      preventEdgeSwipe(swiper, e, e.targetTouches[0].pageX);\n      return;\n    }\n    const {\n      params,\n      touches,\n      enabled\n    } = swiper;\n    if (!enabled) return;\n    if (!params.simulateTouch && e.pointerType === 'mouse') return;\n    if (swiper.animating && params.preventInteractionOnTransition) {\n      return;\n    }\n    if (!swiper.animating && params.cssMode && params.loop) {\n      swiper.loopFix();\n    }\n    let targetEl = e.target;\n    if (params.touchEventsTarget === 'wrapper') {\n      if (!swiper.wrapperEl.contains(targetEl)) return;\n    }\n    if ('which' in e && e.which === 3) return;\n    if ('button' in e && e.button > 0) return;\n    if (data.isTouched && data.isMoved) return;\n\n    // change target el for shadow root component\n    const swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== '';\n    // eslint-disable-next-line\n    const eventPath = e.composedPath ? e.composedPath() : e.path;\n    if (swipingClassHasValue && e.target && e.target.shadowRoot && eventPath) {\n      targetEl = eventPath[0];\n    }\n    const noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`;\n    const isTargetShadow = !!(e.target && e.target.shadowRoot);\n\n    // use closestElement for shadow root element to get the actual closest for nested shadow root element\n    if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, targetEl) : targetEl.closest(noSwipingSelector))) {\n      swiper.allowClick = true;\n      return;\n    }\n    if (params.swipeHandler) {\n      if (!targetEl.closest(params.swipeHandler)) return;\n    }\n    touches.currentX = e.pageX;\n    touches.currentY = e.pageY;\n    const startX = touches.currentX;\n    const startY = touches.currentY;\n\n    // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\n\n    if (!preventEdgeSwipe(swiper, e, startX)) {\n      return;\n    }\n    Object.assign(data, {\n      isTouched: true,\n      isMoved: false,\n      allowTouchCallbacks: true,\n      isScrolling: undefined,\n      startMoving: undefined\n    });\n    touches.startX = startX;\n    touches.startY = startY;\n    data.touchStartTime = now();\n    swiper.allowClick = true;\n    swiper.updateSize();\n    swiper.swipeDirection = undefined;\n    if (params.threshold > 0) data.allowThresholdMove = false;\n    let preventDefault = true;\n    if (targetEl.matches(data.focusableElements)) {\n      preventDefault = false;\n      if (targetEl.nodeName === 'SELECT') {\n        data.isTouched = false;\n      }\n    }\n    if (document.activeElement && document.activeElement.matches(data.focusableElements) && document.activeElement !== targetEl) {\n      document.activeElement.blur();\n    }\n    const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n    if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !targetEl.isContentEditable) {\n      e.preventDefault();\n    }\n    if (params.freeMode && params.freeMode.enabled && swiper.freeMode && swiper.animating && !params.cssMode) {\n      swiper.freeMode.onTouchStart();\n    }\n    swiper.emit('touchStart', e);\n  }\n\n  function onTouchMove(event) {\n    const document = getDocument();\n    const swiper = this;\n    const data = swiper.touchEventsData;\n    const {\n      params,\n      touches,\n      rtlTranslate: rtl,\n      enabled\n    } = swiper;\n    if (!enabled) return;\n    if (!params.simulateTouch && event.pointerType === 'mouse') return;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent;\n    if (e.type === 'pointermove') {\n      if (data.touchId !== null) return; // return from pointer if we use touch\n      const id = e.pointerId;\n      if (id !== data.pointerId) return;\n    }\n    let targetTouch;\n    if (e.type === 'touchmove') {\n      targetTouch = [...e.changedTouches].filter(t => t.identifier === data.touchId)[0];\n      if (!targetTouch || targetTouch.identifier !== data.touchId) return;\n    } else {\n      targetTouch = e;\n    }\n    if (!data.isTouched) {\n      if (data.startMoving && data.isScrolling) {\n        swiper.emit('touchMoveOpposite', e);\n      }\n      return;\n    }\n    const pageX = targetTouch.pageX;\n    const pageY = targetTouch.pageY;\n    if (e.preventedByNestedSwiper) {\n      touches.startX = pageX;\n      touches.startY = pageY;\n      return;\n    }\n    if (!swiper.allowTouchMove) {\n      if (!e.target.matches(data.focusableElements)) {\n        swiper.allowClick = false;\n      }\n      if (data.isTouched) {\n        Object.assign(touches, {\n          startX: pageX,\n          startY: pageY,\n          currentX: pageX,\n          currentY: pageY\n        });\n        data.touchStartTime = now();\n      }\n      return;\n    }\n    if (params.touchReleaseOnEdges && !params.loop) {\n      if (swiper.isVertical()) {\n        // Vertical\n        if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\n          data.isTouched = false;\n          data.isMoved = false;\n          return;\n        }\n      } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) {\n        return;\n      }\n    }\n    if (document.activeElement) {\n      if (e.target === document.activeElement && e.target.matches(data.focusableElements)) {\n        data.isMoved = true;\n        swiper.allowClick = false;\n        return;\n      }\n    }\n    if (data.allowTouchCallbacks) {\n      swiper.emit('touchMove', e);\n    }\n    touches.previousX = touches.currentX;\n    touches.previousY = touches.currentY;\n    touches.currentX = pageX;\n    touches.currentY = pageY;\n    const diffX = touches.currentX - touches.startX;\n    const diffY = touches.currentY - touches.startY;\n    if (swiper.params.threshold && Math.sqrt(diffX ** 2 + diffY ** 2) < swiper.params.threshold) return;\n    if (typeof data.isScrolling === 'undefined') {\n      let touchAngle;\n      if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {\n        data.isScrolling = false;\n      } else {\n        // eslint-disable-next-line\n        if (diffX * diffX + diffY * diffY >= 25) {\n          touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\n          data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\n        }\n      }\n    }\n    if (data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    if (typeof data.startMoving === 'undefined') {\n      if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n        data.startMoving = true;\n      }\n    }\n    if (data.isScrolling) {\n      data.isTouched = false;\n      return;\n    }\n    if (!data.startMoving) {\n      return;\n    }\n    swiper.allowClick = false;\n    if (!params.cssMode && e.cancelable) {\n      e.preventDefault();\n    }\n    if (params.touchMoveStopPropagation && !params.nested) {\n      e.stopPropagation();\n    }\n    let diff = swiper.isHorizontal() ? diffX : diffY;\n    let touchesDiff = swiper.isHorizontal() ? touches.currentX - touches.previousX : touches.currentY - touches.previousY;\n    if (params.oneWayMovement) {\n      diff = Math.abs(diff) * (rtl ? 1 : -1);\n      touchesDiff = Math.abs(touchesDiff) * (rtl ? 1 : -1);\n    }\n    touches.diff = diff;\n    diff *= params.touchRatio;\n    if (rtl) {\n      diff = -diff;\n      touchesDiff = -touchesDiff;\n    }\n    const prevTouchesDirection = swiper.touchesDirection;\n    swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n    swiper.touchesDirection = touchesDiff > 0 ? 'prev' : 'next';\n    const isLoop = swiper.params.loop && !params.cssMode;\n    const allowLoopFix = swiper.touchesDirection === 'next' && swiper.allowSlideNext || swiper.touchesDirection === 'prev' && swiper.allowSlidePrev;\n    if (!data.isMoved) {\n      if (isLoop && allowLoopFix) {\n        swiper.loopFix({\n          direction: swiper.swipeDirection\n        });\n      }\n      data.startTranslate = swiper.getTranslate();\n      swiper.setTransition(0);\n      if (swiper.animating) {\n        const evt = new window.CustomEvent('transitionend', {\n          bubbles: true,\n          cancelable: true\n        });\n        swiper.wrapperEl.dispatchEvent(evt);\n      }\n      data.allowMomentumBounce = false;\n      // Grab Cursor\n      if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n        swiper.setGrabCursor(true);\n      }\n      swiper.emit('sliderFirstMove', e);\n    }\n    let loopFixed;\n    new Date().getTime();\n    if (data.isMoved && data.allowThresholdMove && prevTouchesDirection !== swiper.touchesDirection && isLoop && allowLoopFix && Math.abs(diff) >= 1) {\n      Object.assign(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY,\n        startTranslate: data.currentTranslate\n      });\n      data.loopSwapReset = true;\n      data.startTranslate = data.currentTranslate;\n      return;\n    }\n    swiper.emit('sliderMove', e);\n    data.isMoved = true;\n    data.currentTranslate = diff + data.startTranslate;\n    let disableParentSwiper = true;\n    let resistanceRatio = params.resistanceRatio;\n    if (params.touchReleaseOnEdges) {\n      resistanceRatio = 0;\n    }\n    if (diff > 0) {\n      if (isLoop && allowLoopFix && !loopFixed && data.allowThresholdMove && data.currentTranslate > (params.centeredSlides ? swiper.minTranslate() - swiper.slidesSizesGrid[swiper.activeIndex + 1] : swiper.minTranslate())) {\n        swiper.loopFix({\n          direction: 'prev',\n          setTranslate: true,\n          activeSlideIndex: 0\n        });\n      }\n      if (data.currentTranslate > swiper.minTranslate()) {\n        disableParentSwiper = false;\n        if (params.resistance) {\n          data.currentTranslate = swiper.minTranslate() - 1 + (-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio;\n        }\n      }\n    } else if (diff < 0) {\n      if (isLoop && allowLoopFix && !loopFixed && data.allowThresholdMove && data.currentTranslate < (params.centeredSlides ? swiper.maxTranslate() + swiper.slidesSizesGrid[swiper.slidesSizesGrid.length - 1] : swiper.maxTranslate())) {\n        swiper.loopFix({\n          direction: 'next',\n          setTranslate: true,\n          activeSlideIndex: swiper.slides.length - (params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10)))\n        });\n      }\n      if (data.currentTranslate < swiper.maxTranslate()) {\n        disableParentSwiper = false;\n        if (params.resistance) {\n          data.currentTranslate = swiper.maxTranslate() + 1 - (swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio;\n        }\n      }\n    }\n    if (disableParentSwiper) {\n      e.preventedByNestedSwiper = true;\n    }\n\n    // Directions locks\n    if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n      data.currentTranslate = data.startTranslate;\n    }\n    if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n      data.currentTranslate = data.startTranslate;\n    }\n    if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {\n      data.currentTranslate = data.startTranslate;\n    }\n\n    // Threshold\n    if (params.threshold > 0) {\n      if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n        if (!data.allowThresholdMove) {\n          data.allowThresholdMove = true;\n          touches.startX = touches.currentX;\n          touches.startY = touches.currentY;\n          data.currentTranslate = data.startTranslate;\n          touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n          return;\n        }\n      } else {\n        data.currentTranslate = data.startTranslate;\n        return;\n      }\n    }\n    if (!params.followFinger || params.cssMode) return;\n\n    // Update active index in free mode\n    if (params.freeMode && params.freeMode.enabled && swiper.freeMode || params.watchSlidesProgress) {\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    if (params.freeMode && params.freeMode.enabled && swiper.freeMode) {\n      swiper.freeMode.onTouchMove();\n    }\n    // Update progress\n    swiper.updateProgress(data.currentTranslate);\n    // Update translate\n    swiper.setTranslate(data.currentTranslate);\n  }\n\n  function onTouchEnd(event) {\n    const swiper = this;\n    const data = swiper.touchEventsData;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent;\n    let targetTouch;\n    const isTouchEvent = e.type === 'touchend' || e.type === 'touchcancel';\n    if (!isTouchEvent) {\n      if (data.touchId !== null) return; // return from pointer if we use touch\n      if (e.pointerId !== data.pointerId) return;\n      targetTouch = e;\n    } else {\n      targetTouch = [...e.changedTouches].filter(t => t.identifier === data.touchId)[0];\n      if (!targetTouch || targetTouch.identifier !== data.touchId) return;\n    }\n    if (['pointercancel', 'pointerout', 'pointerleave', 'contextmenu'].includes(e.type)) {\n      const proceed = ['pointercancel', 'contextmenu'].includes(e.type) && (swiper.browser.isSafari || swiper.browser.isWebView);\n      if (!proceed) {\n        return;\n      }\n    }\n    data.pointerId = null;\n    data.touchId = null;\n    const {\n      params,\n      touches,\n      rtlTranslate: rtl,\n      slidesGrid,\n      enabled\n    } = swiper;\n    if (!enabled) return;\n    if (!params.simulateTouch && e.pointerType === 'mouse') return;\n    if (data.allowTouchCallbacks) {\n      swiper.emit('touchEnd', e);\n    }\n    data.allowTouchCallbacks = false;\n    if (!data.isTouched) {\n      if (data.isMoved && params.grabCursor) {\n        swiper.setGrabCursor(false);\n      }\n      data.isMoved = false;\n      data.startMoving = false;\n      return;\n    }\n\n    // Return Grab Cursor\n    if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(false);\n    }\n\n    // Time diff\n    const touchEndTime = now();\n    const timeDiff = touchEndTime - data.touchStartTime;\n\n    // Tap, doubleTap, Click\n    if (swiper.allowClick) {\n      const pathTree = e.path || e.composedPath && e.composedPath();\n      swiper.updateClickedSlide(pathTree && pathTree[0] || e.target, pathTree);\n      swiper.emit('tap click', e);\n      if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n        swiper.emit('doubleTap doubleClick', e);\n      }\n    }\n    data.lastClickTime = now();\n    nextTick(() => {\n      if (!swiper.destroyed) swiper.allowClick = true;\n    });\n    if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 && !data.loopSwapReset || data.currentTranslate === data.startTranslate && !data.loopSwapReset) {\n      data.isTouched = false;\n      data.isMoved = false;\n      data.startMoving = false;\n      return;\n    }\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    let currentPos;\n    if (params.followFinger) {\n      currentPos = rtl ? swiper.translate : -swiper.translate;\n    } else {\n      currentPos = -data.currentTranslate;\n    }\n    if (params.cssMode) {\n      return;\n    }\n    if (params.freeMode && params.freeMode.enabled) {\n      swiper.freeMode.onTouchEnd({\n        currentPos\n      });\n      return;\n    }\n\n    // Find current slide\n    const swipeToLast = currentPos >= -swiper.maxTranslate() && !swiper.params.loop;\n    let stopIndex = 0;\n    let groupSize = swiper.slidesSizesGrid[0];\n    for (let i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n      const increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n      if (typeof slidesGrid[i + increment] !== 'undefined') {\n        if (swipeToLast || currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n          stopIndex = i;\n          groupSize = slidesGrid[i + increment] - slidesGrid[i];\n        }\n      } else if (swipeToLast || currentPos >= slidesGrid[i]) {\n        stopIndex = i;\n        groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n      }\n    }\n    let rewindFirstIndex = null;\n    let rewindLastIndex = null;\n    if (params.rewind) {\n      if (swiper.isBeginning) {\n        rewindLastIndex = params.virtual && params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n      } else if (swiper.isEnd) {\n        rewindFirstIndex = 0;\n      }\n    }\n    // Find current slide size\n    const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n    const increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n    if (timeDiff > params.longSwipesMs) {\n      // Long touches\n      if (!params.longSwipes) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n      if (swiper.swipeDirection === 'next') {\n        if (ratio >= params.longSwipesRatio) swiper.slideTo(params.rewind && swiper.isEnd ? rewindFirstIndex : stopIndex + increment);else swiper.slideTo(stopIndex);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        if (ratio > 1 - params.longSwipesRatio) {\n          swiper.slideTo(stopIndex + increment);\n        } else if (rewindLastIndex !== null && ratio < 0 && Math.abs(ratio) > params.longSwipesRatio) {\n          swiper.slideTo(rewindLastIndex);\n        } else {\n          swiper.slideTo(stopIndex);\n        }\n      }\n    } else {\n      // Short swipes\n      if (!params.shortSwipes) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n      const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n      if (!isNavButtonTarget) {\n        if (swiper.swipeDirection === 'next') {\n          swiper.slideTo(rewindFirstIndex !== null ? rewindFirstIndex : stopIndex + increment);\n        }\n        if (swiper.swipeDirection === 'prev') {\n          swiper.slideTo(rewindLastIndex !== null ? rewindLastIndex : stopIndex);\n        }\n      } else if (e.target === swiper.navigation.nextEl) {\n        swiper.slideTo(stopIndex + increment);\n      } else {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  }\n\n  function onResize() {\n    const swiper = this;\n    const {\n      params,\n      el\n    } = swiper;\n    if (el && el.offsetWidth === 0) return;\n\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Save locks\n    const {\n      allowSlideNext,\n      allowSlidePrev,\n      snapGrid\n    } = swiper;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n    // Disable locks on resize\n    swiper.allowSlideNext = true;\n    swiper.allowSlidePrev = true;\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateSlidesClasses();\n    const isVirtualLoop = isVirtual && params.loop;\n    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides && !isVirtualLoop) {\n      swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n    } else {\n      if (swiper.params.loop && !isVirtual) {\n        swiper.slideToLoop(swiper.realIndex, 0, false, true);\n      } else {\n        swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n    }\n    if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n      clearTimeout(swiper.autoplay.resizeTimeout);\n      swiper.autoplay.resizeTimeout = setTimeout(() => {\n        if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n          swiper.autoplay.resume();\n        }\n      }, 500);\n    }\n    // Return locks after resize\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n    if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n  }\n\n  function onClick(e) {\n    const swiper = this;\n    if (!swiper.enabled) return;\n    if (!swiper.allowClick) {\n      if (swiper.params.preventClicks) e.preventDefault();\n      if (swiper.params.preventClicksPropagation && swiper.animating) {\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n      }\n    }\n  }\n\n  function onScroll() {\n    const swiper = this;\n    const {\n      wrapperEl,\n      rtlTranslate,\n      enabled\n    } = swiper;\n    if (!enabled) return;\n    swiper.previousTranslate = swiper.translate;\n    if (swiper.isHorizontal()) {\n      swiper.translate = -wrapperEl.scrollLeft;\n    } else {\n      swiper.translate = -wrapperEl.scrollTop;\n    }\n    // eslint-disable-next-line\n    if (swiper.translate === 0) swiper.translate = 0;\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n    let newProgress;\n    const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n    if (translatesDiff === 0) {\n      newProgress = 0;\n    } else {\n      newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\n    }\n    if (newProgress !== swiper.progress) {\n      swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\n    }\n    swiper.emit('setTranslate', swiper.translate, false);\n  }\n\n  function onLoad(e) {\n    const swiper = this;\n    processLazyPreloader(swiper, e.target);\n    if (swiper.params.cssMode || swiper.params.slidesPerView !== 'auto' && !swiper.params.autoHeight) {\n      return;\n    }\n    swiper.update();\n  }\n\n  function onDocumentTouchStart() {\n    const swiper = this;\n    if (swiper.documentTouchHandlerProceeded) return;\n    swiper.documentTouchHandlerProceeded = true;\n    if (swiper.params.touchReleaseOnEdges) {\n      swiper.el.style.touchAction = 'auto';\n    }\n  }\n\n  const events = (swiper, method) => {\n    const document = getDocument();\n    const {\n      params,\n      el,\n      wrapperEl,\n      device\n    } = swiper;\n    const capture = !!params.nested;\n    const domMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n    const swiperMethod = method;\n\n    // Touch Events\n    document[domMethod]('touchstart', swiper.onDocumentTouchStart, {\n      passive: false,\n      capture\n    });\n    el[domMethod]('touchstart', swiper.onTouchStart, {\n      passive: false\n    });\n    el[domMethod]('pointerdown', swiper.onTouchStart, {\n      passive: false\n    });\n    document[domMethod]('touchmove', swiper.onTouchMove, {\n      passive: false,\n      capture\n    });\n    document[domMethod]('pointermove', swiper.onTouchMove, {\n      passive: false,\n      capture\n    });\n    document[domMethod]('touchend', swiper.onTouchEnd, {\n      passive: true\n    });\n    document[domMethod]('pointerup', swiper.onTouchEnd, {\n      passive: true\n    });\n    document[domMethod]('pointercancel', swiper.onTouchEnd, {\n      passive: true\n    });\n    document[domMethod]('touchcancel', swiper.onTouchEnd, {\n      passive: true\n    });\n    document[domMethod]('pointerout', swiper.onTouchEnd, {\n      passive: true\n    });\n    document[domMethod]('pointerleave', swiper.onTouchEnd, {\n      passive: true\n    });\n    document[domMethod]('contextmenu', swiper.onTouchEnd, {\n      passive: true\n    });\n\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      el[domMethod]('click', swiper.onClick, true);\n    }\n    if (params.cssMode) {\n      wrapperEl[domMethod]('scroll', swiper.onScroll);\n    }\n\n    // Resize handler\n    if (params.updateOnWindowResize) {\n      swiper[swiperMethod](device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);\n    } else {\n      swiper[swiperMethod]('observerUpdate', onResize, true);\n    }\n\n    // Images loader\n    el[domMethod]('load', swiper.onLoad, {\n      capture: true\n    });\n  };\n  function attachEvents() {\n    const swiper = this;\n    const {\n      params\n    } = swiper;\n    swiper.onTouchStart = onTouchStart.bind(swiper);\n    swiper.onTouchMove = onTouchMove.bind(swiper);\n    swiper.onTouchEnd = onTouchEnd.bind(swiper);\n    swiper.onDocumentTouchStart = onDocumentTouchStart.bind(swiper);\n    if (params.cssMode) {\n      swiper.onScroll = onScroll.bind(swiper);\n    }\n    swiper.onClick = onClick.bind(swiper);\n    swiper.onLoad = onLoad.bind(swiper);\n    events(swiper, 'on');\n  }\n  function detachEvents() {\n    const swiper = this;\n    events(swiper, 'off');\n  }\n  var events$1 = {\n    attachEvents,\n    detachEvents\n  };\n\n  const isGridEnabled = (swiper, params) => {\n    return swiper.grid && params.grid && params.grid.rows > 1;\n  };\n  function setBreakpoint() {\n    const swiper = this;\n    const {\n      realIndex,\n      initialized,\n      params,\n      el\n    } = swiper;\n    const breakpoints = params.breakpoints;\n    if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return;\n\n    // Get breakpoint for window width and update parameters\n    const breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n    if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n    const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n    const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n    const wasMultiRow = isGridEnabled(swiper, params);\n    const isMultiRow = isGridEnabled(swiper, breakpointParams);\n    const wasEnabled = params.enabled;\n    if (wasMultiRow && !isMultiRow) {\n      el.classList.remove(`${params.containerModifierClass}grid`, `${params.containerModifierClass}grid-column`);\n      swiper.emitContainerClasses();\n    } else if (!wasMultiRow && isMultiRow) {\n      el.classList.add(`${params.containerModifierClass}grid`);\n      if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {\n        el.classList.add(`${params.containerModifierClass}grid-column`);\n      }\n      swiper.emitContainerClasses();\n    }\n\n    // Toggle navigation, pagination, scrollbar\n    ['navigation', 'pagination', 'scrollbar'].forEach(prop => {\n      if (typeof breakpointParams[prop] === 'undefined') return;\n      const wasModuleEnabled = params[prop] && params[prop].enabled;\n      const isModuleEnabled = breakpointParams[prop] && breakpointParams[prop].enabled;\n      if (wasModuleEnabled && !isModuleEnabled) {\n        swiper[prop].disable();\n      }\n      if (!wasModuleEnabled && isModuleEnabled) {\n        swiper[prop].enable();\n      }\n    });\n    const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n    const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n    const wasLoop = params.loop;\n    if (directionChanged && initialized) {\n      swiper.changeDirection();\n    }\n    extend(swiper.params, breakpointParams);\n    const isEnabled = swiper.params.enabled;\n    const hasLoop = swiper.params.loop;\n    Object.assign(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev\n    });\n    if (wasEnabled && !isEnabled) {\n      swiper.disable();\n    } else if (!wasEnabled && isEnabled) {\n      swiper.enable();\n    }\n    swiper.currentBreakpoint = breakpoint;\n    swiper.emit('_beforeBreakpoint', breakpointParams);\n    if (initialized) {\n      if (needsReLoop) {\n        swiper.loopDestroy();\n        swiper.loopCreate(realIndex);\n        swiper.updateSlides();\n      } else if (!wasLoop && hasLoop) {\n        swiper.loopCreate(realIndex);\n        swiper.updateSlides();\n      } else if (wasLoop && !hasLoop) {\n        swiper.loopDestroy();\n      }\n    }\n    swiper.emit('breakpoint', breakpointParams);\n  }\n\n  function getBreakpoint(breakpoints, base, containerEl) {\n    if (base === void 0) {\n      base = 'window';\n    }\n    if (!breakpoints || base === 'container' && !containerEl) return undefined;\n    let breakpoint = false;\n    const window = getWindow();\n    const currentHeight = base === 'window' ? window.innerHeight : containerEl.clientHeight;\n    const points = Object.keys(breakpoints).map(point => {\n      if (typeof point === 'string' && point.indexOf('@') === 0) {\n        const minRatio = parseFloat(point.substr(1));\n        const value = currentHeight * minRatio;\n        return {\n          value,\n          point\n        };\n      }\n      return {\n        value: point,\n        point\n      };\n    });\n    points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\n    for (let i = 0; i < points.length; i += 1) {\n      const {\n        point,\n        value\n      } = points[i];\n      if (base === 'window') {\n        if (window.matchMedia(`(min-width: ${value}px)`).matches) {\n          breakpoint = point;\n        }\n      } else if (value <= containerEl.clientWidth) {\n        breakpoint = point;\n      }\n    }\n    return breakpoint || 'max';\n  }\n\n  var breakpoints = {\n    setBreakpoint,\n    getBreakpoint\n  };\n\n  function prepareClasses(entries, prefix) {\n    const resultClasses = [];\n    entries.forEach(item => {\n      if (typeof item === 'object') {\n        Object.keys(item).forEach(classNames => {\n          if (item[classNames]) {\n            resultClasses.push(prefix + classNames);\n          }\n        });\n      } else if (typeof item === 'string') {\n        resultClasses.push(prefix + item);\n      }\n    });\n    return resultClasses;\n  }\n  function addClasses() {\n    const swiper = this;\n    const {\n      classNames,\n      params,\n      rtl,\n      el,\n      device\n    } = swiper;\n    // prettier-ignore\n    const suffixes = prepareClasses(['initialized', params.direction, {\n      'free-mode': swiper.params.freeMode && params.freeMode.enabled\n    }, {\n      'autoheight': params.autoHeight\n    }, {\n      'rtl': rtl\n    }, {\n      'grid': params.grid && params.grid.rows > 1\n    }, {\n      'grid-column': params.grid && params.grid.rows > 1 && params.grid.fill === 'column'\n    }, {\n      'android': device.android\n    }, {\n      'ios': device.ios\n    }, {\n      'css-mode': params.cssMode\n    }, {\n      'centered': params.cssMode && params.centeredSlides\n    }, {\n      'watch-progress': params.watchSlidesProgress\n    }], params.containerModifierClass);\n    classNames.push(...suffixes);\n    el.classList.add(...classNames);\n    swiper.emitContainerClasses();\n  }\n\n  function removeClasses() {\n    const swiper = this;\n    const {\n      el,\n      classNames\n    } = swiper;\n    el.classList.remove(...classNames);\n    swiper.emitContainerClasses();\n  }\n\n  var classes = {\n    addClasses,\n    removeClasses\n  };\n\n  function checkOverflow() {\n    const swiper = this;\n    const {\n      isLocked: wasLocked,\n      params\n    } = swiper;\n    const {\n      slidesOffsetBefore\n    } = params;\n    if (slidesOffsetBefore) {\n      const lastSlideIndex = swiper.slides.length - 1;\n      const lastSlideRightEdge = swiper.slidesGrid[lastSlideIndex] + swiper.slidesSizesGrid[lastSlideIndex] + slidesOffsetBefore * 2;\n      swiper.isLocked = swiper.size > lastSlideRightEdge;\n    } else {\n      swiper.isLocked = swiper.snapGrid.length === 1;\n    }\n    if (params.allowSlideNext === true) {\n      swiper.allowSlideNext = !swiper.isLocked;\n    }\n    if (params.allowSlidePrev === true) {\n      swiper.allowSlidePrev = !swiper.isLocked;\n    }\n    if (wasLocked && wasLocked !== swiper.isLocked) {\n      swiper.isEnd = false;\n    }\n    if (wasLocked !== swiper.isLocked) {\n      swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n    }\n  }\n  var checkOverflow$1 = {\n    checkOverflow\n  };\n\n  var defaults = {\n    init: true,\n    direction: 'horizontal',\n    oneWayMovement: false,\n    touchEventsTarget: 'wrapper',\n    initialSlide: 0,\n    speed: 300,\n    cssMode: false,\n    updateOnWindowResize: true,\n    resizeObserver: true,\n    nested: false,\n    createElements: false,\n    eventsPrefix: 'swiper',\n    enabled: true,\n    focusableElements: 'input, select, option, textarea, button, video, label',\n    // Overrides\n    width: null,\n    height: null,\n    //\n    preventInteractionOnTransition: false,\n    // ssr\n    userAgent: null,\n    url: null,\n    // To support iOS's swipe-to-go-back gesture (when being used in-app).\n    edgeSwipeDetection: false,\n    edgeSwipeThreshold: 20,\n    // Autoheight\n    autoHeight: false,\n    // Set wrapper width\n    setWrapperSize: false,\n    // Virtual Translate\n    virtualTranslate: false,\n    // Effects\n    effect: 'slide',\n    // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n    // Breakpoints\n    breakpoints: undefined,\n    breakpointsBase: 'window',\n    // Slides grid\n    spaceBetween: 0,\n    slidesPerView: 1,\n    slidesPerGroup: 1,\n    slidesPerGroupSkip: 0,\n    slidesPerGroupAuto: false,\n    centeredSlides: false,\n    centeredSlidesBounds: false,\n    slidesOffsetBefore: 0,\n    // in px\n    slidesOffsetAfter: 0,\n    // in px\n    normalizeSlideIndex: true,\n    centerInsufficientSlides: false,\n    // Disable swiper and hide navigation when container not overflow\n    watchOverflow: true,\n    // Round length\n    roundLengths: false,\n    // Touches\n    touchRatio: 1,\n    touchAngle: 45,\n    simulateTouch: true,\n    shortSwipes: true,\n    longSwipes: true,\n    longSwipesRatio: 0.5,\n    longSwipesMs: 300,\n    followFinger: true,\n    allowTouchMove: true,\n    threshold: 5,\n    touchMoveStopPropagation: false,\n    touchStartPreventDefault: true,\n    touchStartForcePreventDefault: false,\n    touchReleaseOnEdges: false,\n    // Unique Navigation Elements\n    uniqueNavElements: true,\n    // Resistance\n    resistance: true,\n    resistanceRatio: 0.85,\n    // Progress\n    watchSlidesProgress: false,\n    // Cursor\n    grabCursor: false,\n    // Clicks\n    preventClicks: true,\n    preventClicksPropagation: true,\n    slideToClickedSlide: false,\n    // loop\n    loop: false,\n    loopAddBlankSlides: true,\n    loopAdditionalSlides: 0,\n    loopPreventsSliding: true,\n    // rewind\n    rewind: false,\n    // Swiping/no swiping\n    allowSlidePrev: true,\n    allowSlideNext: true,\n    swipeHandler: null,\n    // '.swipe-handler',\n    noSwiping: true,\n    noSwipingClass: 'swiper-no-swiping',\n    noSwipingSelector: null,\n    // Passive Listeners\n    passiveListeners: true,\n    maxBackfaceHiddenSlides: 10,\n    // NS\n    containerModifierClass: 'swiper-',\n    // NEW\n    slideClass: 'swiper-slide',\n    slideBlankClass: 'swiper-slide-blank',\n    slideActiveClass: 'swiper-slide-active',\n    slideVisibleClass: 'swiper-slide-visible',\n    slideFullyVisibleClass: 'swiper-slide-fully-visible',\n    slideNextClass: 'swiper-slide-next',\n    slidePrevClass: 'swiper-slide-prev',\n    wrapperClass: 'swiper-wrapper',\n    lazyPreloaderClass: 'swiper-lazy-preloader',\n    lazyPreloadPrevNext: 0,\n    // Callbacks\n    runCallbacksOnInit: true,\n    // Internals\n    _emitClasses: false\n  };\n\n  function moduleExtendParams(params, allModulesParams) {\n    return function extendParams(obj) {\n      if (obj === void 0) {\n        obj = {};\n      }\n      const moduleParamName = Object.keys(obj)[0];\n      const moduleParams = obj[moduleParamName];\n      if (typeof moduleParams !== 'object' || moduleParams === null) {\n        extend(allModulesParams, obj);\n        return;\n      }\n      if (params[moduleParamName] === true) {\n        params[moduleParamName] = {\n          enabled: true\n        };\n      }\n      if (moduleParamName === 'navigation' && params[moduleParamName] && params[moduleParamName].enabled && !params[moduleParamName].prevEl && !params[moduleParamName].nextEl) {\n        params[moduleParamName].auto = true;\n      }\n      if (['pagination', 'scrollbar'].indexOf(moduleParamName) >= 0 && params[moduleParamName] && params[moduleParamName].enabled && !params[moduleParamName].el) {\n        params[moduleParamName].auto = true;\n      }\n      if (!(moduleParamName in params && 'enabled' in moduleParams)) {\n        extend(allModulesParams, obj);\n        return;\n      }\n      if (typeof params[moduleParamName] === 'object' && !('enabled' in params[moduleParamName])) {\n        params[moduleParamName].enabled = true;\n      }\n      if (!params[moduleParamName]) params[moduleParamName] = {\n        enabled: false\n      };\n      extend(allModulesParams, obj);\n    };\n  }\n\n  /* eslint no-param-reassign: \"off\" */\n  const prototypes = {\n    eventsEmitter,\n    update,\n    translate,\n    transition,\n    slide,\n    loop,\n    grabCursor,\n    events: events$1,\n    breakpoints,\n    checkOverflow: checkOverflow$1,\n    classes\n  };\n  const extendedDefaults = {};\n  class Swiper {\n    constructor() {\n      let el;\n      let params;\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === 'Object') {\n        params = args[0];\n      } else {\n        [el, params] = args;\n      }\n      if (!params) params = {};\n      params = extend({}, params);\n      if (el && !params.el) params.el = el;\n      const document = getDocument();\n      if (params.el && typeof params.el === 'string' && document.querySelectorAll(params.el).length > 1) {\n        const swipers = [];\n        document.querySelectorAll(params.el).forEach(containerEl => {\n          const newParams = extend({}, params, {\n            el: containerEl\n          });\n          swipers.push(new Swiper(newParams));\n        });\n        // eslint-disable-next-line no-constructor-return\n        return swipers;\n      }\n\n      // Swiper Instance\n      const swiper = this;\n      swiper.__swiper__ = true;\n      swiper.support = getSupport();\n      swiper.device = getDevice({\n        userAgent: params.userAgent\n      });\n      swiper.browser = getBrowser();\n      swiper.eventsListeners = {};\n      swiper.eventsAnyListeners = [];\n      swiper.modules = [...swiper.__modules__];\n      if (params.modules && Array.isArray(params.modules)) {\n        swiper.modules.push(...params.modules);\n      }\n      const allModulesParams = {};\n      swiper.modules.forEach(mod => {\n        mod({\n          params,\n          swiper,\n          extendParams: moduleExtendParams(params, allModulesParams),\n          on: swiper.on.bind(swiper),\n          once: swiper.once.bind(swiper),\n          off: swiper.off.bind(swiper),\n          emit: swiper.emit.bind(swiper)\n        });\n      });\n\n      // Extend defaults with modules params\n      const swiperParams = extend({}, defaults, allModulesParams);\n\n      // Extend defaults with passed params\n      swiper.params = extend({}, swiperParams, extendedDefaults, params);\n      swiper.originalParams = extend({}, swiper.params);\n      swiper.passedParams = extend({}, params);\n\n      // add event listeners\n      if (swiper.params && swiper.params.on) {\n        Object.keys(swiper.params.on).forEach(eventName => {\n          swiper.on(eventName, swiper.params.on[eventName]);\n        });\n      }\n      if (swiper.params && swiper.params.onAny) {\n        swiper.onAny(swiper.params.onAny);\n      }\n\n      // Extend Swiper\n      Object.assign(swiper, {\n        enabled: swiper.params.enabled,\n        el,\n        // Classes\n        classNames: [],\n        // Slides\n        slides: [],\n        slidesGrid: [],\n        snapGrid: [],\n        slidesSizesGrid: [],\n        // isDirection\n        isHorizontal() {\n          return swiper.params.direction === 'horizontal';\n        },\n        isVertical() {\n          return swiper.params.direction === 'vertical';\n        },\n        // Indexes\n        activeIndex: 0,\n        realIndex: 0,\n        //\n        isBeginning: true,\n        isEnd: false,\n        // Props\n        translate: 0,\n        previousTranslate: 0,\n        progress: 0,\n        velocity: 0,\n        animating: false,\n        cssOverflowAdjustment() {\n          // Returns 0 unless `translate` is > 2**23\n          // Should be subtracted from css values to prevent overflow\n          return Math.trunc(this.translate / 2 ** 23) * 2 ** 23;\n        },\n        // Locks\n        allowSlideNext: swiper.params.allowSlideNext,\n        allowSlidePrev: swiper.params.allowSlidePrev,\n        // Touch Events\n        touchEventsData: {\n          isTouched: undefined,\n          isMoved: undefined,\n          allowTouchCallbacks: undefined,\n          touchStartTime: undefined,\n          isScrolling: undefined,\n          currentTranslate: undefined,\n          startTranslate: undefined,\n          allowThresholdMove: undefined,\n          // Form elements to match\n          focusableElements: swiper.params.focusableElements,\n          // Last click time\n          lastClickTime: 0,\n          clickTimeout: undefined,\n          // Velocities\n          velocities: [],\n          allowMomentumBounce: undefined,\n          startMoving: undefined,\n          pointerId: null,\n          touchId: null\n        },\n        // Clicks\n        allowClick: true,\n        // Touches\n        allowTouchMove: swiper.params.allowTouchMove,\n        touches: {\n          startX: 0,\n          startY: 0,\n          currentX: 0,\n          currentY: 0,\n          diff: 0\n        },\n        // Images\n        imagesToLoad: [],\n        imagesLoaded: 0\n      });\n      swiper.emit('_swiper');\n\n      // Init\n      if (swiper.params.init) {\n        swiper.init();\n      }\n\n      // Return app instance\n      // eslint-disable-next-line no-constructor-return\n      return swiper;\n    }\n    getDirectionLabel(property) {\n      if (this.isHorizontal()) {\n        return property;\n      }\n      // prettier-ignore\n      return {\n        'width': 'height',\n        'margin-top': 'margin-left',\n        'margin-bottom ': 'margin-right',\n        'margin-left': 'margin-top',\n        'margin-right': 'margin-bottom',\n        'padding-left': 'padding-top',\n        'padding-right': 'padding-bottom',\n        'marginRight': 'marginBottom'\n      }[property];\n    }\n    getSlideIndex(slideEl) {\n      const {\n        slidesEl,\n        params\n      } = this;\n      const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n      const firstSlideIndex = elementIndex(slides[0]);\n      return elementIndex(slideEl) - firstSlideIndex;\n    }\n    getSlideIndexByData(index) {\n      return this.getSlideIndex(this.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') * 1 === index)[0]);\n    }\n    recalcSlides() {\n      const swiper = this;\n      const {\n        slidesEl,\n        params\n      } = swiper;\n      swiper.slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n    }\n    enable() {\n      const swiper = this;\n      if (swiper.enabled) return;\n      swiper.enabled = true;\n      if (swiper.params.grabCursor) {\n        swiper.setGrabCursor();\n      }\n      swiper.emit('enable');\n    }\n    disable() {\n      const swiper = this;\n      if (!swiper.enabled) return;\n      swiper.enabled = false;\n      if (swiper.params.grabCursor) {\n        swiper.unsetGrabCursor();\n      }\n      swiper.emit('disable');\n    }\n    setProgress(progress, speed) {\n      const swiper = this;\n      progress = Math.min(Math.max(progress, 0), 1);\n      const min = swiper.minTranslate();\n      const max = swiper.maxTranslate();\n      const current = (max - min) * progress + min;\n      swiper.translateTo(current, typeof speed === 'undefined' ? 0 : speed);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    emitContainerClasses() {\n      const swiper = this;\n      if (!swiper.params._emitClasses || !swiper.el) return;\n      const cls = swiper.el.className.split(' ').filter(className => {\n        return className.indexOf('swiper') === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;\n      });\n      swiper.emit('_containerClasses', cls.join(' '));\n    }\n    getSlideClasses(slideEl) {\n      const swiper = this;\n      if (swiper.destroyed) return '';\n      return slideEl.className.split(' ').filter(className => {\n        return className.indexOf('swiper-slide') === 0 || className.indexOf(swiper.params.slideClass) === 0;\n      }).join(' ');\n    }\n    emitSlidesClasses() {\n      const swiper = this;\n      if (!swiper.params._emitClasses || !swiper.el) return;\n      const updates = [];\n      swiper.slides.forEach(slideEl => {\n        const classNames = swiper.getSlideClasses(slideEl);\n        updates.push({\n          slideEl,\n          classNames\n        });\n        swiper.emit('_slideClass', slideEl, classNames);\n      });\n      swiper.emit('_slideClasses', updates);\n    }\n    slidesPerViewDynamic(view, exact) {\n      if (view === void 0) {\n        view = 'current';\n      }\n      if (exact === void 0) {\n        exact = false;\n      }\n      const swiper = this;\n      const {\n        params,\n        slides,\n        slidesGrid,\n        slidesSizesGrid,\n        size: swiperSize,\n        activeIndex\n      } = swiper;\n      let spv = 1;\n      if (typeof params.slidesPerView === 'number') return params.slidesPerView;\n      if (params.centeredSlides) {\n        let slideSize = slides[activeIndex] ? slides[activeIndex].swiperSlideSize : 0;\n        let breakLoop;\n        for (let i = activeIndex + 1; i < slides.length; i += 1) {\n          if (slides[i] && !breakLoop) {\n            slideSize += slides[i].swiperSlideSize;\n            spv += 1;\n            if (slideSize > swiperSize) breakLoop = true;\n          }\n        }\n        for (let i = activeIndex - 1; i >= 0; i -= 1) {\n          if (slides[i] && !breakLoop) {\n            slideSize += slides[i].swiperSlideSize;\n            spv += 1;\n            if (slideSize > swiperSize) breakLoop = true;\n          }\n        }\n      } else {\n        // eslint-disable-next-line\n        if (view === 'current') {\n          for (let i = activeIndex + 1; i < slides.length; i += 1) {\n            const slideInView = exact ? slidesGrid[i] + slidesSizesGrid[i] - slidesGrid[activeIndex] < swiperSize : slidesGrid[i] - slidesGrid[activeIndex] < swiperSize;\n            if (slideInView) {\n              spv += 1;\n            }\n          }\n        } else {\n          // previous\n          for (let i = activeIndex - 1; i >= 0; i -= 1) {\n            const slideInView = slidesGrid[activeIndex] - slidesGrid[i] < swiperSize;\n            if (slideInView) {\n              spv += 1;\n            }\n          }\n        }\n      }\n      return spv;\n    }\n    update() {\n      const swiper = this;\n      if (!swiper || swiper.destroyed) return;\n      const {\n        snapGrid,\n        params\n      } = swiper;\n      // Breakpoints\n      if (params.breakpoints) {\n        swiper.setBreakpoint();\n      }\n      [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n        if (imageEl.complete) {\n          processLazyPreloader(swiper, imageEl);\n        }\n      });\n      swiper.updateSize();\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      function setTranslate() {\n        const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n        const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n        swiper.setTranslate(newTranslate);\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      }\n      let translated;\n      if (params.freeMode && params.freeMode.enabled && !params.cssMode) {\n        setTranslate();\n        if (params.autoHeight) {\n          swiper.updateAutoHeight();\n        }\n      } else {\n        if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !params.centeredSlides) {\n          const slides = swiper.virtual && params.virtual.enabled ? swiper.virtual.slides : swiper.slides;\n          translated = swiper.slideTo(slides.length - 1, 0, false, true);\n        } else {\n          translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n        }\n        if (!translated) {\n          setTranslate();\n        }\n      }\n      if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n        swiper.checkOverflow();\n      }\n      swiper.emit('update');\n    }\n    changeDirection(newDirection, needUpdate) {\n      if (needUpdate === void 0) {\n        needUpdate = true;\n      }\n      const swiper = this;\n      const currentDirection = swiper.params.direction;\n      if (!newDirection) {\n        // eslint-disable-next-line\n        newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n      }\n      if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {\n        return swiper;\n      }\n      swiper.el.classList.remove(`${swiper.params.containerModifierClass}${currentDirection}`);\n      swiper.el.classList.add(`${swiper.params.containerModifierClass}${newDirection}`);\n      swiper.emitContainerClasses();\n      swiper.params.direction = newDirection;\n      swiper.slides.forEach(slideEl => {\n        if (newDirection === 'vertical') {\n          slideEl.style.width = '';\n        } else {\n          slideEl.style.height = '';\n        }\n      });\n      swiper.emit('changeDirection');\n      if (needUpdate) swiper.update();\n      return swiper;\n    }\n    changeLanguageDirection(direction) {\n      const swiper = this;\n      if (swiper.rtl && direction === 'rtl' || !swiper.rtl && direction === 'ltr') return;\n      swiper.rtl = direction === 'rtl';\n      swiper.rtlTranslate = swiper.params.direction === 'horizontal' && swiper.rtl;\n      if (swiper.rtl) {\n        swiper.el.classList.add(`${swiper.params.containerModifierClass}rtl`);\n        swiper.el.dir = 'rtl';\n      } else {\n        swiper.el.classList.remove(`${swiper.params.containerModifierClass}rtl`);\n        swiper.el.dir = 'ltr';\n      }\n      swiper.update();\n    }\n    mount(element) {\n      const swiper = this;\n      if (swiper.mounted) return true;\n\n      // Find el\n      let el = element || swiper.params.el;\n      if (typeof el === 'string') {\n        el = document.querySelector(el);\n      }\n      if (!el) {\n        return false;\n      }\n      el.swiper = swiper;\n      if (el.parentNode && el.parentNode.host && el.parentNode.host.nodeName === 'SWIPER-CONTAINER') {\n        swiper.isElement = true;\n      }\n      const getWrapperSelector = () => {\n        return `.${(swiper.params.wrapperClass || '').trim().split(' ').join('.')}`;\n      };\n      const getWrapper = () => {\n        if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n          const res = el.shadowRoot.querySelector(getWrapperSelector());\n          // Children needs to return slot items\n          return res;\n        }\n        return elementChildren(el, getWrapperSelector())[0];\n      };\n      // Find Wrapper\n      let wrapperEl = getWrapper();\n      if (!wrapperEl && swiper.params.createElements) {\n        wrapperEl = createElement('div', swiper.params.wrapperClass);\n        el.append(wrapperEl);\n        elementChildren(el, `.${swiper.params.slideClass}`).forEach(slideEl => {\n          wrapperEl.append(slideEl);\n        });\n      }\n      Object.assign(swiper, {\n        el,\n        wrapperEl,\n        slidesEl: swiper.isElement && !el.parentNode.host.slideSlots ? el.parentNode.host : wrapperEl,\n        hostEl: swiper.isElement ? el.parentNode.host : el,\n        mounted: true,\n        // RTL\n        rtl: el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl',\n        rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl'),\n        wrongRTL: elementStyle(wrapperEl, 'display') === '-webkit-box'\n      });\n      return true;\n    }\n    init(el) {\n      const swiper = this;\n      if (swiper.initialized) return swiper;\n      const mounted = swiper.mount(el);\n      if (mounted === false) return swiper;\n      swiper.emit('beforeInit');\n\n      // Set breakpoint\n      if (swiper.params.breakpoints) {\n        swiper.setBreakpoint();\n      }\n\n      // Add Classes\n      swiper.addClasses();\n\n      // Update size\n      swiper.updateSize();\n\n      // Update slides\n      swiper.updateSlides();\n      if (swiper.params.watchOverflow) {\n        swiper.checkOverflow();\n      }\n\n      // Set Grab Cursor\n      if (swiper.params.grabCursor && swiper.enabled) {\n        swiper.setGrabCursor();\n      }\n\n      // Slide To Initial Slide\n      if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n        swiper.slideTo(swiper.params.initialSlide + swiper.virtual.slidesBefore, 0, swiper.params.runCallbacksOnInit, false, true);\n      } else {\n        swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);\n      }\n\n      // Create loop\n      if (swiper.params.loop) {\n        swiper.loopCreate();\n      }\n\n      // Attach events\n      swiper.attachEvents();\n      const lazyElements = [...swiper.el.querySelectorAll('[loading=\"lazy\"]')];\n      if (swiper.isElement) {\n        lazyElements.push(...swiper.hostEl.querySelectorAll('[loading=\"lazy\"]'));\n      }\n      lazyElements.forEach(imageEl => {\n        if (imageEl.complete) {\n          processLazyPreloader(swiper, imageEl);\n        } else {\n          imageEl.addEventListener('load', e => {\n            processLazyPreloader(swiper, e.target);\n          });\n        }\n      });\n      preload(swiper);\n\n      // Init Flag\n      swiper.initialized = true;\n      preload(swiper);\n\n      // Emit\n      swiper.emit('init');\n      swiper.emit('afterInit');\n      return swiper;\n    }\n    destroy(deleteInstance, cleanStyles) {\n      if (deleteInstance === void 0) {\n        deleteInstance = true;\n      }\n      if (cleanStyles === void 0) {\n        cleanStyles = true;\n      }\n      const swiper = this;\n      const {\n        params,\n        el,\n        wrapperEl,\n        slides\n      } = swiper;\n      if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n        return null;\n      }\n      swiper.emit('beforeDestroy');\n\n      // Init Flag\n      swiper.initialized = false;\n\n      // Detach events\n      swiper.detachEvents();\n\n      // Destroy loop\n      if (params.loop) {\n        swiper.loopDestroy();\n      }\n\n      // Cleanup styles\n      if (cleanStyles) {\n        swiper.removeClasses();\n        el.removeAttribute('style');\n        wrapperEl.removeAttribute('style');\n        if (slides && slides.length) {\n          slides.forEach(slideEl => {\n            slideEl.classList.remove(params.slideVisibleClass, params.slideFullyVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n            slideEl.removeAttribute('style');\n            slideEl.removeAttribute('data-swiper-slide-index');\n          });\n        }\n      }\n      swiper.emit('destroy');\n\n      // Detach emitter events\n      Object.keys(swiper.eventsListeners).forEach(eventName => {\n        swiper.off(eventName);\n      });\n      if (deleteInstance !== false) {\n        swiper.el.swiper = null;\n        deleteProps(swiper);\n      }\n      swiper.destroyed = true;\n      return null;\n    }\n    static extendDefaults(newDefaults) {\n      extend(extendedDefaults, newDefaults);\n    }\n    static get extendedDefaults() {\n      return extendedDefaults;\n    }\n    static get defaults() {\n      return defaults;\n    }\n    static installModule(mod) {\n      if (!Swiper.prototype.__modules__) Swiper.prototype.__modules__ = [];\n      const modules = Swiper.prototype.__modules__;\n      if (typeof mod === 'function' && modules.indexOf(mod) < 0) {\n        modules.push(mod);\n      }\n    }\n    static use(module) {\n      if (Array.isArray(module)) {\n        module.forEach(m => Swiper.installModule(m));\n        return Swiper;\n      }\n      Swiper.installModule(module);\n      return Swiper;\n    }\n  }\n  Object.keys(prototypes).forEach(prototypeGroup => {\n    Object.keys(prototypes[prototypeGroup]).forEach(protoMethod => {\n      Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n    });\n  });\n  Swiper.use([Resize, Observer]);\n\n  return Swiper;\n\n})();\n"],"names":["Swiper","isObject$1","obj","constructor","Object","extend$1","target","src","keys","forEach","key","length","ssrDocument","body","addEventListener","removeEventListener","activeElement","blur","nodeName","querySelector","querySelectorAll","getElementById","createEvent","initEvent","createElement","children","childNodes","style","setAttribute","getElementsByTagName","createElementNS","importNode","location","hash","host","hostname","href","origin","pathname","protocol","search","getDocument","doc","document","ssrWindow","navigator","userAgent","history","replaceState","pushState","go","back","CustomEvent","this","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","matchMedia","requestAnimationFrame","callback","cancelAnimationFrame","id","getWindow","win","window","nextTick","delay","now","getTranslate","el","axis","window1","matrix","curTransform","transformMatrix","curStyle","currentStyle","getComputedStyle$1","WebKitCSSMatrix","transform","webkitTransform","split","map","a","replace","join","MozTransform","OTransform","MsTransform","msTransform","toString","m41","parseFloat","m42","isObject","o","prototype","call","slice","isNode","node","HTMLElement","nodeType","extend","to","arguments","undefined","noExtend","i","nextSource","keysArray","filter","indexOf","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","__swiper__","setCSSProperty","varName","varValue","setProperty","animateCSSModeScroll","_ref","swiper","targetPosition","side","startPosition","translate","time","startTime","duration","params","speed","wrapperEl","scrollSnapType","cssModeFrameID","dir","isOutOfBound","current","animate","getTime","progress","Math","max","min","easeProgress","cos","PI","currentPosition","scrollTo","overflow","elementChildren","element","selector","matches","showWarning","text","console","warn","err","tag","classes","classList","add","Array","isArray","trim","c","classesToTokens","elementStyle","prop","elementIndex","child","previousSibling","elementOuterSize","size","includeMargins","offsetWidth","support","deviceCached","browser","getSupport","document1","smoothScroll","documentElement","touch","DocumentTouch","calcSupport","getDevice","overrides","_temp","platform","ua","device","ios","android","screenWidth","width","screenHeight","height","match","ipad","ipod","iphone","windows","macos","os","calcDevice","getBrowser","needPerspectiveFix","isSafari","toLowerCase","String","includes","major","minor","num","Number","isWebView","test","calcBrowser","eventsEmitter","on","events","handler","priority","self","eventsListeners","destroyed","method","event","once","onceHandler","off","__emitterProxy","_len","args","_key","apply","onAny","eventsAnyListeners","offAny","index","splice","eventHandler","emit","data","context","_len2","_key2","unshift","processLazyPreloader","imageEl","slideEl","closest","isElement","slideClass","lazyEl","lazyPreloaderClass","shadowRoot","remove","unlazy","slides","removeAttribute","preload","amount","lazyPreloadPrevNext","slidesPerView","slidesPerViewDynamic","ceil","activeIndex","grid","rows","activeColumn","preloadColumns","push","from","_","column","slideIndexLastInView","rewind","loop","realIndex","update","updateSize","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","isNaN","assign","updateSlides","getDirectionPropertyValue","label","getDirectionLabel","slidesEl","swiperSize","rtlTranslate","rtl","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginRight","marginBottom","marginTop","centeredSlides","cssMode","gridEnabled","slideSize","initSlides","unsetSlides","shouldResetSlideSize","breakpoints","slide","updateSlide","slideStyles","currentTransform","currentWebKitTransform","roundLengths","paddingLeft","paddingRight","boxSizing","floor","swiperSlideSize","abs","slidesPerGroup","slidesPerGroupSkip","effect","setWrapperSize","updateWrapperSize","newSlidesGrid","slidesGridItem","groups","slidesBefore","slidesAfter","groupSize","slideIndex","centeredSlidesBounds","allSlidesSize","slideSizeValue","maxSnap","snap","centerInsufficientSlides","allSlidesOffset","snapIndex","addToSnapGrid","addToSlidesGrid","v","watchOverflow","checkOverflow","watchSlidesProgress","updateSlidesOffset","backFaceHiddenClass","containerModifierClass","hasClassBackfaceClassAdded","contains","maxBackfaceHiddenSlides","updateAutoHeight","activeSlides","newHeight","setTransition","getSlideByIndex","getSlideIndexByData","visibleSlides","offsetHeight","minusOffset","offsetLeft","offsetTop","swiperSlideOffset","cssOverflowAdjustment","updateSlidesProgress","offsetCenter","slideVisibleClass","slideFullyVisibleClass","visibleSlidesIndexes","slideOffset","slideProgress","minTranslate","originalSlideProgress","slideBefore","slideAfter","isFullyVisible","originalProgress","updateProgress","multiplier","translatesDiff","maxTranslate","isBeginning","isEnd","progressLoop","wasBeginning","wasEnd","isBeginningRounded","isEndRounded","firstSlideIndex","lastSlideIndex","firstSlideTranslate","lastSlideTranslate","translateMax","translateAbs","autoHeight","updateSlidesClasses","getFilteredSlide","activeSlide","prevSlide","nextSlide","slideActiveClass","slideNextClass","slidePrevClass","nextEls","nextElementSibling","next","elementNextAll","prevEls","previousElementSibling","prev","elementPrevAll","emitSlidesClasses","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","getVirtualRealIndex","aIndex","normalizeSlideIndex","getActiveIndexByTranslate","skip","firstSlideInColumn","activeSlideIndex","getAttribute","initialized","runCallbacksOnInit","updateClickedSlide","path","pathEl","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","virtualTranslate","currentTranslate","setTranslate","byController","newProgress","x","y","previousTranslate","translateTo","runCallbacks","translateBounds","internal","animating","preventInteractionOnTransition","newTranslate","isH","behavior","onTranslateToWrapperTransitionEnd","e","transitionEmit","direction","step","slideTo","initial","normalizedTranslate","normalizedGrid","normalizedGridNext","allowSlideNext","allowSlidePrev","transitionStart","transitionEnd","t","_immediateVirtual","_cssModeVirtualInitialSet","initialSlide","onSlideToWrapperTransitionEnd","slideToLoop","newIndex","targetSlideIndex","cols","needLoopFix","loopFix","slideRealIndex","slideNext","perGroup","slidesPerGroupAuto","increment","loopPreventsSliding","_clientLeft","clientLeft","slidePrev","normalize","val","normalizedSnapGrid","prevSnap","prevSnapIndex","prevIndex","lastIndex","slideReset","slideToClosest","threshold","currentSnap","slideToIndex","slideSelector","loopedSlides","getSlideIndex","loopCreate","shouldFillGroup","shouldFillGrid","addBlankSlides","amountOfSlides","slideBlankClass","append","loopAddBlankSlides","recalcSlides","byMousewheel","loopAdditionalSlides","fill","prependSlidesIndexes","appendSlidesIndexes","isNext","isPrev","slidesPrepended","slidesAppended","activeColIndexWithShift","colIndexToPrepend","__preventObserver__","swiperLoopMoveDOM","prepend","currentSlideTranslate","diff","touchEventsData","startTranslate","shift","controller","control","loopParams","loopDestroy","newSlidesOrder","swiperSlideIndex","preventEdgeSwipe","startX","edgeSwipeDetection","edgeSwipeThreshold","innerWidth","preventDefault","onTouchStart","originalEvent","type","pointerId","targetTouches","touchId","identifier","pageX","touches","simulateTouch","pointerType","targetEl","touchEventsTarget","which","button","isTouched","isMoved","swipingClassHasValue","noSwipingClass","eventPath","composedPath","noSwipingSelector","isTargetShadow","noSwiping","base","__closestFrom","assignedSlot","found","getRootNode","closestElement","allowClick","swipeHandler","currentX","currentY","pageY","startY","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","allowThresholdMove","focusableElements","shouldPreventDefault","allowTouchMove","touchStartPreventDefault","touchStartForcePreventDefault","isContentEditable","freeMode","onTouchMove","targetTouch","changedTouches","preventedByNestedSwiper","touchReleaseOnEdges","previousX","previousY","diffX","diffY","sqrt","touchAngle","atan2","cancelable","touchMoveStopPropagation","nested","stopPropagation","touchesDiff","oneWayMovement","touchRatio","prevTouchesDirection","touchesDirection","isLoop","allowLoopFix","evt","bubbles","dispatchEvent","allowMomentumBounce","grabCursor","setGrabCursor","loopSwapReset","disableParentSwiper","resistanceRatio","resistance","followFinger","onTouchEnd","touchEndTime","timeDiff","pathTree","lastClickTime","currentPos","swipeToLast","stopIndex","rewindFirstIndex","rewindLastIndex","ratio","longSwipesMs","longSwipes","longSwipesRatio","shortSwipes","navigation","nextEl","prevEl","onResize","setBreakpoint","isVirtualLoop","autoplay","running","paused","resizeTimeout","resume","onClick","preventClicks","preventClicksPropagation","stopImmediatePropagation","onScroll","scrollLeft","scrollTop","onLoad","onDocumentTouchStart","documentTouchHandlerProceeded","touchAction","capture","domMethod","swiperMethod","passive","updateOnWindowResize","isGridEnabled","defaults","init","resizeObserver","createElements","eventsPrefix","url","breakpointsBase","uniqueNavElements","passiveListeners","wrapperClass","_emitClasses","moduleExtendParams","allModulesParams","moduleParamName","moduleParams","auto","prototypes","transition","transitionDuration","transitionDelay","moving","isLocked","cursor","unsetGrabCursor","attachEvents","bind","detachEvents","breakpoint","getBreakpoint","currentBreakpoint","breakpointParams","originalParams","wasMultiRow","isMultiRow","wasEnabled","emitContainerClasses","wasModuleEnabled","isModuleEnabled","disable","enable","directionChanged","needsReLoop","wasLoop","changeDirection","isEnabled","hasLoop","containerEl","currentHeight","innerHeight","points","point","minRatio","substr","value","sort","b","wasLocked","lastSlideRightEdge","addClasses","classNames","suffixes","entries","prefix","resultClasses","item","prepareClasses","autoheight","centered","removeClasses","extendedDefaults","swipers","newParams","modules","__modules__","mod","extendParams","swiperParams","passedParams","eventName","velocity","trunc","clickTimeout","velocities","imagesToLoad","imagesLoaded","property","setProgress","cls","className","getSlideClasses","updates","view","exact","spv","breakLoop","translateValue","translated","complete","newDirection","needUpdate","currentDirection","changeLanguageDirection","mount","mounted","parentNode","getWrapperSelector","getWrapper","slideSlots","hostEl","lazyElements","destroy","deleteInstance","cleanStyles","object","deleteProps","static","newDefaults","module","m","installModule","prototypeGroup","protoMethod","use","observer","animationFrame","resizeHandler","orientationChangeHandler","ResizeObserver","newWidth","_ref2","contentBoxSize","contentRect","inlineSize","blockSize","observe","unobserve","observers","attach","options","MutationObserver","WebkitMutationObserver","mutations","observerUpdate","attributes","childList","characterData","observeParents","observeSlideChildren","containerParents","parents","parent","parentElement","elementParents","disconnect"],"version":3,"file":"index.b3e6a3be.js.map"}